// Generated by psc-bundle 0.7.6.1
var PS = { };
(function(exports) {
  /* global exports */
  "use strict";

  // module Prelude

  //- Functor --------------------------------------------------------------------

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };

  //- Bind -----------------------------------------------------------------------

  exports.arrayBind = function (arr) {
    return function (f) {
      var result = [];
      for (var i = 0, l = arr.length; i < l; i++) {
        Array.prototype.push.apply(result, f(arr[i]));
      }
      return result;
    };
  };

  //- Monoid ---------------------------------------------------------------------

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      return xs.concat(ys);
    };
  };

  exports.numAdd = function (n1) {
    return function (n2) {
      return n1 + n2;
    };
  };

  exports.numMul = function (n1) {
    return function (n2) {
      return n1 * n2;
    };
  };

  exports.numSub = function (n1) {
    return function (n2) {
      return n1 - n2;
    };
  };

  //- Eq -------------------------------------------------------------------------

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  //- Ord ------------------------------------------------------------------------

  exports.unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x > y ? gt : eq;
          };
        };
      };
    };
  };

  //- Show -----------------------------------------------------------------------

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showNumberImpl = function (n) {
    /* jshint bitwise: false */
    return n === (n | 0) ? n + ".0" : n.toString();
  };
 
})(PS["Prelude"] = PS["Prelude"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Prelude"];
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
      this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
      this.id = id;
  };
  var Functor = function (map) {
      this.map = map;
  };
  var Apply = function (__superclass_Prelude$dotFunctor_0, apply) {
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.apply = apply;
  };
  var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.pure = pure;
  };
  var Bind = function (__superclass_Prelude$dotApply_0, bind) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.bind = bind;
  };
  var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
      this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
      this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
  };
  var Semigroup = function (append) {
      this.append = append;
  };
  var Semiring = function (add, mul, one, zero) {
      this.add = add;
      this.mul = mul;
      this.one = one;
      this.zero = zero;
  };
  var Ring = function (__superclass_Prelude$dotSemiring_0, sub) {
      this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
      this.sub = sub;
  };
  var Eq = function (eq) {
      this.eq = eq;
  };
  var Ord = function (__superclass_Prelude$dotEq_0, compare) {
      this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
      this.compare = compare;
  };
  var Show = function (show) {
      this.show = show;
  };
  var zero = function (dict) {
      return dict.zero;
  };
  var unsafeCompare = $foreign.unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
  var unit = {};
  var sub = function (dict) {
      return dict.sub;
  };
  var $minus = function (__dict_Ring_0) {
      return sub(__dict_Ring_0);
  }; 
  var showNumber = new Show($foreign.showNumberImpl);
  var showInt = new Show($foreign.showIntImpl);
  var show = function (dict) {
      return dict.show;
  };             
  var semiringNumber = new Semiring($foreign.numAdd, $foreign.numMul, 1.0, 0.0);
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var semigroupString = new Semigroup($foreign.concatString);
  var semigroupArray = new Semigroup($foreign.concatArray);
  var ringNumber = new Ring(function () {
      return semiringNumber;
  }, $foreign.numSub);
  var pure = function (dict) {
      return dict.pure;
  };
  var $$return = function (__dict_Applicative_2) {
      return pure(__dict_Applicative_2);
  };                   
  var one = function (dict) {
      return dict.one;
  };
  var negate = function (__dict_Ring_3) {
      return function (a) {
          return $minus(__dict_Ring_3)(zero(__dict_Ring_3["__superclass_Prelude.Semiring_0"]()))(a);
      };
  };
  var mul = function (dict) {
      return dict.mul;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $less$dollar$greater = function (__dict_Functor_5) {
      return map(__dict_Functor_5);
  };
  var id = function (dict) {
      return dict.id;
  };
  var functorArray = new Functor($foreign.arrayMap);
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  }; 
  var eqString = new Eq($foreign.refEq);
  var ordString = new Ord(function () {
      return eqString;
  }, unsafeCompare);
  var eqNumber = new Eq($foreign.refEq);
  var ordNumber = new Ord(function () {
      return eqNumber;
  }, unsafeCompare);
  var eqInt = new Eq($foreign.refEq);
  var ordInt = new Ord(function () {
      return eqInt;
  }, unsafeCompare);
  var eqChar = new Eq($foreign.refEq);
  var ordChar = new Ord(function () {
      return eqChar;
  }, unsafeCompare);
  var eqBoolean = new Eq($foreign.refEq);
  var ordBoolean = new Ord(function () {
      return eqBoolean;
  }, unsafeCompare);
  var eq = function (dict) {
      return dict.eq;
  };
  var $eq$eq = function (__dict_Eq_7) {
      return eq(__dict_Eq_7);
  };
  var $$const = function (a) {
      return function (_3) {
          return a;
      };
  };
  var compose = function (dict) {
      return dict.compose;
  };
  var $greater$greater$greater = function (__dict_Semigroupoid_15) {
      return flip(compose(__dict_Semigroupoid_15));
  };
  var compare = function (dict) {
      return dict.compare;
  };
  var categoryFn = new Category(function () {
      return semigroupoidFn;
  }, function (x) {
      return x;
  });
  var bind = function (dict) {
      return dict.bind;
  };
  var $greater$greater$eq = function (__dict_Bind_24) {
      return bind(__dict_Bind_24);
  }; 
  var apply = function (dict) {
      return dict.apply;
  };
  var $less$times$greater = function (__dict_Apply_25) {
      return apply(__dict_Apply_25);
  };
  var liftA1 = function (__dict_Applicative_26) {
      return function (f) {
          return function (a) {
              return $less$times$greater(__dict_Applicative_26["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_26)(f))(a);
          };
      };
  }; 
  var append = function (dict) {
      return dict.append;
  };
  var $plus$plus = function (__dict_Semigroup_27) {
      return append(__dict_Semigroup_27);
  };
  var $less$greater = function (__dict_Semigroup_28) {
      return append(__dict_Semigroup_28);
  };
  var ap = function (__dict_Monad_30) {
      return function (f) {
          return function (a) {
              return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                  return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                      return $$return(__dict_Monad_30["__superclass_Prelude.Applicative_0"]())(_2(_1));
                  });
              });
          };
      };
  };
  var monadArray = new Monad(function () {
      return applicativeArray;
  }, function () {
      return bindArray;
  });
  var bindArray = new Bind(function () {
      return applyArray;
  }, $foreign.arrayBind);
  var applyArray = new Apply(function () {
      return functorArray;
  }, ap(monadArray));
  var applicativeArray = new Applicative(function () {
      return applyArray;
  }, function (x) {
      return [ x ];
  });
  var add = function (dict) {
      return dict.add;
  };
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
  exports["Show"] = Show;
  exports["Ord"] = Ord;
  exports["Eq"] = Eq;
  exports["Ring"] = Ring;
  exports["Semiring"] = Semiring;
  exports["Semigroup"] = Semigroup;
  exports["Monad"] = Monad;
  exports["Bind"] = Bind;
  exports["Applicative"] = Applicative;
  exports["Apply"] = Apply;
  exports["Functor"] = Functor;
  exports["Category"] = Category;
  exports["Semigroupoid"] = Semigroupoid;
  exports["show"] = show;
  exports["unsafeCompare"] = unsafeCompare;
  exports["compare"] = compare;
  exports["=="] = $eq$eq;
  exports["eq"] = eq;
  exports["negate"] = negate;
  exports["sub"] = sub;
  exports["one"] = one;
  exports["mul"] = mul;
  exports["zero"] = zero;
  exports["add"] = add;
  exports["++"] = $plus$plus;
  exports["<>"] = $less$greater;
  exports["append"] = append;
  exports["ap"] = ap;
  exports["return"] = $$return;
  exports[">>="] = $greater$greater$eq;
  exports["bind"] = bind;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
  exports["<*>"] = $less$times$greater;
  exports["apply"] = apply;
  exports["<$>"] = $less$dollar$greater;
  exports["map"] = map;
  exports["id"] = id;
  exports[">>>"] = $greater$greater$greater;
  exports["compose"] = compose;
  exports["const"] = $$const;
  exports["flip"] = flip;
  exports["unit"] = unit;
  exports["semigroupoidFn"] = semigroupoidFn;
  exports["categoryFn"] = categoryFn;
  exports["functorArray"] = functorArray;
  exports["applyArray"] = applyArray;
  exports["applicativeArray"] = applicativeArray;
  exports["bindArray"] = bindArray;
  exports["monadArray"] = monadArray;
  exports["semigroupString"] = semigroupString;
  exports["semigroupArray"] = semigroupArray;
  exports["semiringNumber"] = semiringNumber;
  exports["ringNumber"] = ringNumber;
  exports["eqBoolean"] = eqBoolean;
  exports["eqInt"] = eqInt;
  exports["eqNumber"] = eqNumber;
  exports["eqChar"] = eqChar;
  exports["eqString"] = eqString;
  exports["ordBoolean"] = ordBoolean;
  exports["ordInt"] = ordInt;
  exports["ordNumber"] = ordNumber;
  exports["ordString"] = ordString;
  exports["ordChar"] = ordChar;
  exports["showInt"] = showInt;
  exports["showNumber"] = showNumber;;
 
})(PS["Prelude"] = PS["Prelude"] || {});
(function(exports) {
  /* global exports, console */
  "use strict";

  // module Control.Monad.Eff.Console

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };
 
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff

  exports.returnE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
 
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Prelude = PS["Prelude"];     
  var monadEff = new Prelude.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Prelude.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Prelude.Apply(function () {
      return functorEff;
  }, Prelude.ap(monadEff));
  var applicativeEff = new Prelude.Applicative(function () {
      return applyEff;
  }, $foreign.returnE);
  var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;;
 
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Console"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["log"] = $foreign.log;;
 
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  /* global require */
  /* global exports */
  "use strict";

  // module Node.FS.Sync

  exports.fs = require('fs');
 
})(PS["Node.FS.Sync"] = PS["Node.FS.Sync"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];     
  var Alt = function (__superclass_Prelude$dotFunctor_0, alt) {
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.alt = alt;
  };
  var altArray = new Alt(function () {
      return Prelude.functorArray;
  }, Prelude.append(Prelude.semigroupArray));
  var alt = function (dict) {
      return dict.alt;
  };
  var $less$bar$greater = function (__dict_Alt_0) {
      return alt(__dict_Alt_0);
  };
  exports["Alt"] = Alt;
  exports["<|>"] = $less$bar$greater;
  exports["alt"] = alt;
  exports["altArray"] = altArray;;
 
})(PS["Control.Alt"] = PS["Control.Alt"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];     
  var Plus = function (__superclass_Control$dotAlt$dotAlt_0, empty) {
      this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
      this.empty = empty;
  };
  var plusArray = new Plus(function () {
      return Control_Alt.altArray;
  }, [  ]);
  var empty = function (dict) {
      return dict.empty;
  };
  exports["Plus"] = Plus;
  exports["empty"] = empty;
  exports["plusArray"] = plusArray;;
 
})(PS["Control.Plus"] = PS["Control.Plus"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Plus = PS["Control.Plus"];     
  var Alternative = function (__superclass_Control$dotPlus$dotPlus_1, __superclass_Prelude$dotApplicative_0) {
      this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
      this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
  };
  var alternativeArray = new Alternative(function () {
      return Control_Plus.plusArray;
  }, function () {
      return Prelude.applicativeArray;
  });
  exports["Alternative"] = Alternative;
  exports["alternativeArray"] = alternativeArray;;
 
})(PS["Control.Alternative"] = PS["Control.Alternative"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];     
  var Monoid = function (__superclass_Prelude$dotSemigroup_0, mempty) {
      this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
      this.mempty = mempty;
  };               
  var monoidString = new Monoid(function () {
      return Prelude.semigroupString;
  }, "");
  var monoidArray = new Monoid(function () {
      return Prelude.semigroupArray;
  }, [  ]);
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["monoidString"] = monoidString;
  exports["monoidArray"] = monoidArray;;
 
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Extend = PS["Control.Extend"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];     
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var semigroupMaybe = function (__dict_Semigroup_2) {
      return new Prelude.Semigroup(function (_7) {
          return function (_8) {
              if (_7 instanceof Nothing) {
                  return _8;
              };
              if (_8 instanceof Nothing) {
                  return _7;
              };
              if (_7 instanceof Just && _8 instanceof Just) {
                  return new Just(Prelude["<>"](__dict_Semigroup_2)(_7.value0)(_8.value0));
              };
              throw new Error("Failed pattern match at Data.Maybe line 231, column 1 - line 236, column 1: " + [ _7.constructor.name, _8.constructor.name ]);
          };
      });
  };
  var monoidMaybe = function (__dict_Semigroup_6) {
      return new Data_Monoid.Monoid(function () {
          return semigroupMaybe(__dict_Semigroup_6);
      }, Nothing.value);
  };
  var maybe = function (b) {
      return function (f) {
          return function (_0) {
              if (_0 instanceof Nothing) {
                  return b;
              };
              if (_0 instanceof Just) {
                  return f(_0.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe line 26, column 1 - line 27, column 1: " + [ b.constructor.name, f.constructor.name, _0.constructor.name ]);
          };
      };
  };                                                
  var functorMaybe = new Prelude.Functor(function (fn) {
      return function (_2) {
          if (_2 instanceof Just) {
              return new Just(fn(_2.value0));
          };
          return Nothing.value;
      };
  });
  var fromMaybe = function (a) {
      return maybe(a)(Prelude.id(Prelude.categoryFn));
  };
  var applyMaybe = new Prelude.Apply(function () {
      return functorMaybe;
  }, function (_3) {
      return function (x) {
          if (_3 instanceof Just) {
              return Prelude["<$>"](functorMaybe)(_3.value0)(x);
          };
          if (_3 instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 121, column 1 - line 145, column 1: " + [ _3.constructor.name, x.constructor.name ]);
      };
  });
  var bindMaybe = new Prelude.Bind(function () {
      return applyMaybe;
  }, function (_5) {
      return function (k) {
          if (_5 instanceof Just) {
              return k(_5.value0);
          };
          if (_5 instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 180, column 1 - line 199, column 1: " + [ _5.constructor.name, k.constructor.name ]);
      };
  });
  var applicativeMaybe = new Prelude.Applicative(function () {
      return applyMaybe;
  }, Just.create);
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["fromMaybe"] = fromMaybe;
  exports["maybe"] = maybe;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
  exports["bindMaybe"] = bindMaybe;
  exports["semigroupMaybe"] = semigroupMaybe;
  exports["monoidMaybe"] = monoidMaybe;;
 
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Node.Encoding"];
  var Prelude = PS["Prelude"];     
  var ASCII = (function () {
      function ASCII() {

      };
      ASCII.value = new ASCII();
      return ASCII;
  })();
  var UTF8 = (function () {
      function UTF8() {

      };
      UTF8.value = new UTF8();
      return UTF8;
  })();
  var UTF16LE = (function () {
      function UTF16LE() {

      };
      UTF16LE.value = new UTF16LE();
      return UTF16LE;
  })();
  var UCS2 = (function () {
      function UCS2() {

      };
      UCS2.value = new UCS2();
      return UCS2;
  })();
  var Base64 = (function () {
      function Base64() {

      };
      Base64.value = new Base64();
      return Base64;
  })();
  var Binary = (function () {
      function Binary() {

      };
      Binary.value = new Binary();
      return Binary;
  })();
  var Hex = (function () {
      function Hex() {

      };
      Hex.value = new Hex();
      return Hex;
  })();
  var showEncoding = new Prelude.Show(function (_0) {
      if (_0 instanceof ASCII) {
          return "ascii";
      };
      if (_0 instanceof UTF8) {
          return "utf8";
      };
      if (_0 instanceof UTF16LE) {
          return "utf16le";
      };
      if (_0 instanceof UCS2) {
          return "ucs2";
      };
      if (_0 instanceof Base64) {
          return "base64";
      };
      if (_0 instanceof Binary) {
          return "binary";
      };
      if (_0 instanceof Hex) {
          return "hex";
      };
      throw new Error("Failed pattern match at Node.Encoding line 17, column 1 - line 26, column 1: " + [ _0.constructor.name ]);
  });
  exports["ASCII"] = ASCII;
  exports["UTF8"] = UTF8;
  exports["UTF16LE"] = UTF16LE;
  exports["UCS2"] = UCS2;
  exports["Base64"] = Base64;
  exports["Binary"] = Binary;
  exports["Hex"] = Hex;
  exports["showEncoding"] = showEncoding;;
 
})(PS["Node.Encoding"] = PS["Node.Encoding"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.take = function (n) {
    return function (s) {
      return s.substr(0, n);
    };
  };

  exports.drop = function (n) {
    return function (s) {
      return s.substr(n);
    };
  };

  exports.split = function (sep) {
    return function (s) {
      return s.split(sep);
    };
  };
 
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Data.String"];
  var Prelude = PS["Prelude"];
  var Data_Char = PS["Data.Char"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_String_Unsafe = PS["Data.String.Unsafe"];
  exports["split"] = $foreign.split;
  exports["drop"] = $foreign.drop;
  exports["take"] = $foreign.take;;
 
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Global = PS["Global"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];
  var Data_Char = PS["Data.Char"];
  var Data_String = PS["Data.String"];
  var Data_Int = PS["Data.Int"];
  var semiringPerm = new Prelude.Semiring(function (_7) {
      return function (_8) {
          return {
              r: _7.r || _8.r, 
              w: _7.w || _8.w, 
              x: _7.x || _8.x
          };
      };
  }, function (_9) {
      return function (_10) {
          return {
              r: _9.r && _10.r, 
              w: _9.w && _10.w, 
              x: _9.x && _10.x
          };
      };
  }, {
      r: true, 
      w: true, 
      x: true
  }, {
      r: false, 
      w: false, 
      x: false
  });
  var permToInt = function (_0) {
      return ((function () {
          if (_0.r) {
              return 4;
          };
          if (!_0.r) {
              return 0;
          };
          throw new Error("Failed pattern match at Node.FS.Perms line 156, column 1 - line 157, column 1: " + [ _0.r.constructor.name ]);
      })() + (function () {
          if (_0.w) {
              return 2;
          };
          if (!_0.w) {
              return 0;
          };
          throw new Error("Failed pattern match at Node.FS.Perms line 156, column 1 - line 157, column 1: " + [ _0.w.constructor.name ]);
      })() | 0) + (function () {
          if (_0.x) {
              return 1;
          };
          if (!_0.x) {
              return 0;
          };
          throw new Error("Failed pattern match at Node.FS.Perms line 156, column 1 - line 157, column 1: " + [ _0.x.constructor.name ]);
      })() | 0;
  };
  var permToString = function (_95) {
      return Prelude.show(Prelude.showInt)(permToInt(_95));
  };
  var permsToString = function (_1) {
      return "0" + (permToString(_1.u) + (permToString(_1.g) + permToString(_1.o)));
  };                                    
  var mkPerms = function (u) {
      return function (g) {
          return function (o) {
              return {
                  u: u, 
                  g: g, 
                  o: o
              };
          };
      };
  }; 
  var all = Prelude.one(semiringPerm);
  exports["permsToString"] = permsToString;
  exports["mkPerms"] = mkPerms;
  exports["all"] = all;
  exports["semiringPerm"] = semiringPerm;;
 
})(PS["Node.FS.Perms"] = PS["Node.FS.Perms"] || {});
(function(exports) {
  "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function(x) { return x; }
 
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;;
 
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];     
  var mkEff = Unsafe_Coerce.unsafeCoerce;
  exports["mkEff"] = mkEff;;
 
})(PS["Node.FS.Internal"] = PS["Node.FS.Internal"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Node.FS.Sync"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Data_Date = PS["Data.Date"];
  var Data_Time = PS["Data.Time"];
  var Data_Function = PS["Data.Function"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Node_Buffer = PS["Node.Buffer"];
  var Node_Encoding = PS["Node.Encoding"];
  var Node_FS = PS["Node.FS"];
  var Node_FS_Stats = PS["Node.FS.Stats"];
  var Node_Path = PS["Node.Path"];
  var Node_FS_Perms = PS["Node.FS.Perms"];
  var Node_FS_Internal = PS["Node.FS.Internal"];     
  var writeTextFile = function (encoding) {
      return function (file) {
          return function (text) {
              return Node_FS_Internal.mkEff(function (_19) {
                  return $foreign.fs.writeFileSync(file, text, {
                      encoding: Prelude.show(Node_Encoding.showEncoding)(encoding)
                  });
              });
          };
      };
  };
  var mkdir$prime = function (file) {
      return function (perms) {
          return Node_FS_Internal.mkEff(function (_13) {
              return $foreign.fs.mkdirSync(file, Node_FS_Perms.permsToString(perms));
          });
      };
  };
  var mkdir = Prelude.flip(mkdir$prime)(Node_FS_Perms.mkPerms(Node_FS_Perms.all)(Node_FS_Perms.all)(Node_FS_Perms.all));
  var exists = function (file) {
      return Prelude["return"](Control_Monad_Eff.applicativeEff)($foreign.fs.existsSync(file));
  };
  exports["exists"] = exists;
  exports["writeTextFile"] = writeTextFile;
  exports["mkdir"] = mkdir;;
 
})(PS["Node.FS.Sync"] = PS["Node.FS.Sync"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var $times$greater = function (__dict_Apply_1) {
      return function (a) {
          return function (b) {
              return Prelude["<*>"](__dict_Apply_1)(Prelude["<$>"](__dict_Apply_1["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryFn)))(a))(b);
          };
      };
  };
  exports["*>"] = $times$greater;;
 
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.replicate = function (n) {
    return function (v) {
      if (n < 1) return [];
      var r = new Array(n);
      for (var i = 0; i < n; i++) r[i] = v;
      return r;
    };
  };

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  };

  //------------------------------------------------------------------------------
  // Non-indexed reads -----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports["uncons'"] = function (empty) {
    return function (next) {
      return function (xs) {
        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
      };
    };
  };

  exports.concat = function (xss) {
    var result = [];
    for (var i = 0, l = xss.length; i < l; i++) {
      var xs = xss[i];
      for (var j = 0, m = xs.length; j < m; j++) {
        result.push(xs[j]);
      }
    }
    return result;
  };

  //------------------------------------------------------------------------------
  // Sorting ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.sortImpl = function (f) {
    return function (l) {
      /* jshint maxparams: 2 */
      return l.slice().sort(function (x, y) {
        return f(x)(y);
      });
    };
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };

  exports.drop = function (n) {
    return function (l) {
      return n < 1 ? l : l.slice(n);
    };
  };
 
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Foldable

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
 
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var semigroupFirst = new Prelude.Semigroup(function (_11) {
      return function (second) {
          if (_11 instanceof Data_Maybe.Just) {
              return _11;
          };
          return second;
      };
  });
  var runFirst = function (_0) {
      return _0;
  };
  var monoidFirst = new Data_Monoid.Monoid(function () {
      return semigroupFirst;
  }, Data_Maybe.Nothing.value);
  exports["runFirst"] = runFirst;
  exports["semigroupFirst"] = semigroupFirst;
  exports["monoidFirst"] = monoidFirst;;
 
})(PS["Data.Maybe.First"] = PS["Data.Maybe.First"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Prelude = PS["Prelude"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];     
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var intercalate = function (__dict_Foldable_6) {
      return function (__dict_Monoid_7) {
          return function (sep) {
              return function (xs) {
                  var go = function (_24) {
                      return function (x) {
                          if (_24.init) {
                              return {
                                  init: false, 
                                  acc: x
                              };
                          };
                          return {
                              init: false, 
                              acc: Prelude["<>"](__dict_Monoid_7["__superclass_Prelude.Semigroup_0"]())(_24.acc)(Prelude["<>"](__dict_Monoid_7["__superclass_Prelude.Semigroup_0"]())(sep)(x))
                          };
                      };
                  };
                  return (foldl(__dict_Foldable_6)(go)({
                      init: true, 
                      acc: Data_Monoid.mempty(__dict_Monoid_7)
                  })(xs)).acc;
              };
          };
      };
  };
  var mconcat = function (__dict_Foldable_11) {
      return function (__dict_Monoid_12) {
          return foldl(__dict_Foldable_11)(Prelude["<>"](__dict_Monoid_12["__superclass_Prelude.Semigroup_0"]()))(Data_Monoid.mempty(__dict_Monoid_12));
      };
  }; 
  var foldMapDefaultR = function (__dict_Foldable_26) {
      return function (__dict_Monoid_27) {
          return function (f) {
              return function (xs) {
                  return foldr(__dict_Foldable_26)(function (x) {
                      return function (acc) {
                          return Prelude["<>"](__dict_Monoid_27["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                      };
                  })(Data_Monoid.mempty(__dict_Monoid_27))(xs);
              };
          };
      };
  };
  var foldableArray = new Foldable(function (__dict_Monoid_28) {
      return foldMapDefaultR(foldableArray)(__dict_Monoid_28);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var fold = function (__dict_Foldable_35) {
      return function (__dict_Monoid_36) {
          return foldMap(__dict_Foldable_35)(__dict_Monoid_36)(Prelude.id(Prelude.categoryFn));
      };
  };
  exports["Foldable"] = Foldable;
  exports["intercalate"] = intercalate;
  exports["mconcat"] = mconcat;
  exports["fold"] = fold;
  exports["foldMapDefaultR"] = foldMapDefaultR;
  exports["foldMap"] = foldMap;
  exports["foldl"] = foldl;
  exports["foldr"] = foldr;
  exports["foldableArray"] = foldableArray;;
 
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Traversable

  // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function Cont (fn) {
      this.fn = fn;
    }

    var emptyList = {};

    var ConsCell = function (head, tail) {
      this.head = head;
      this.tail = tail;
    };

    function consList (x) {
      return function (xs) {
        return new ConsCell(x, xs);
      };
    }

    function listToArray (list) {
      var arr = [];
      while (list !== emptyList) {
        arr.push(list.head);
        list = list.tail;
      }
      return arr;
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            var buildFrom = function (x, ys) {
              return apply(map(consList)(f(x)))(ys);
            };

            var go = function (acc, currentLen, xs) {
              if (currentLen === 0) {
                return acc;
              } else {
                var last = xs[currentLen - 1];
                return new Cont(function () {
                  return go(buildFrom(last, acc), currentLen - 1, xs);
                });
              }
            };

            return function (array) {
              var result = go(pure(emptyList), array.length, array);
              while (result instanceof Cont) {
                result = result.fn();
              }

              return map(listToArray)(result);
            };
          };
        };
      };
    };
  }();
 
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
      this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  };
  var sequenceDefault = function (__dict_Traversable_12) {
      return function (__dict_Applicative_13) {
          return function (tma) {
              return traverse(__dict_Traversable_12)(__dict_Applicative_13)(Prelude.id(Prelude.categoryFn))(tma);
          };
      };
  };
  var traversableArray = new Traversable(function () {
      return Data_Foldable.foldableArray;
  }, function () {
      return Prelude.functorArray;
  }, function (__dict_Applicative_15) {
      return sequenceDefault(traversableArray)(__dict_Applicative_15);
  }, function (__dict_Applicative_14) {
      return $foreign.traverseArrayImpl(Prelude.apply(__dict_Applicative_14["__superclass_Prelude.Apply_0"]()))(Prelude.map((__dict_Applicative_14["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]()))(Prelude.pure(__dict_Applicative_14));
  });
  var sequence = function (dict) {
      return dict.sequence;
  };
  exports["Traversable"] = Traversable;
  exports["sequenceDefault"] = sequenceDefault;
  exports["sequence"] = sequence;
  exports["traverse"] = traverse;
  exports["traversableArray"] = traversableArray;;
 
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Biapplicative = PS["Control.Biapplicative"];
  var Control_Biapply = PS["Control.Biapply"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var uncurry = function (f) {
      return function (_5) {
          return f(_5.value0)(_5.value1);
      };
  };
  var snd = function (_4) {
      return _4.value1;
  };
  var lookup = function (__dict_Foldable_19) {
      return function (__dict_Eq_20) {
          return function (a) {
              return function (f) {
                  return Data_Maybe_First.runFirst(Data_Foldable.foldMap(__dict_Foldable_19)(Data_Maybe_First.monoidFirst)(function (_2) {
                      var _105 = Prelude["=="](__dict_Eq_20)(a)(_2.value0);
                      if (_105) {
                          return new Data_Maybe.Just(_2.value1);
                      };
                      if (!_105) {
                          return Data_Maybe.Nothing.value;
                      };
                      throw new Error("Failed pattern match at Data.Tuple line 173, column 1 - line 174, column 1: " + [ _105.constructor.name ]);
                  })(f));
              };
          };
      };
  };
  var functorTuple = new Prelude.Functor(function (f) {
      return function (_31) {
          return new Tuple(_31.value0, f(_31.value1));
      };
  });
  exports["Tuple"] = Tuple;
  exports["lookup"] = lookup;
  exports["uncurry"] = uncurry;
  exports["snd"] = snd;
  exports["functorTuple"] = functorTuple;;
 
})(PS["Data.Tuple"] = PS["Data.Tuple"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Data.Array"];
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];     
  var $colon = $foreign.cons;
  var uncons = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (xs) {
          return new Data_Maybe.Just({
              head: x, 
              tail: xs
          });
      };
  });
  var take = $foreign.slice(0);
  var tail = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (_7) {
      return function (xs) {
          return new Data_Maybe.Just(xs);
      };
  });
  var sortBy = function (comp) {
      return function (xs) {
          var comp$prime = function (x) {
              return function (y) {
                  var _25 = comp(x)(y);
                  if (_25 instanceof Prelude.GT) {
                      return 1;
                  };
                  if (_25 instanceof Prelude.EQ) {
                      return 0;
                  };
                  if (_25 instanceof Prelude.LT) {
                      return -1;
                  };
                  throw new Error("Failed pattern match at Data.Array line 391, column 3 - line 396, column 1: " + [ _25.constructor.name ]);
              };
          };
          return $foreign.sortImpl(comp$prime)(xs);
      };
  };
  var sort = function (__dict_Ord_1) {
      return function (xs) {
          return sortBy(Prelude.compare(__dict_Ord_1))(xs);
      };
  };
  var singleton = function (a) {
      return [ a ];
  };
  var head = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (_6) {
          return new Data_Maybe.Just(x);
      };
  });
  var concatMap = Prelude.flip(Prelude.bind(Prelude.bindArray));
  var mapMaybe = function (f) {
      return concatMap(function (_48) {
          return Data_Maybe.maybe([  ])(singleton)(f(_48));
      });
  };
  exports["take"] = take;
  exports["sortBy"] = sortBy;
  exports["sort"] = sort;
  exports["mapMaybe"] = mapMaybe;
  exports["concatMap"] = concatMap;
  exports["uncons"] = uncons;
  exports["tail"] = tail;
  exports["head"] = head;
  exports[":"] = $colon;
  exports["singleton"] = singleton;
  exports["drop"] = $foreign.drop;
  exports["length"] = $foreign.length;
  exports["replicate"] = $foreign.replicate;;
 
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var either = function (f) {
      return function (g) {
          return function (_1) {
              if (_1 instanceof Left) {
                  return f(_1.value0);
              };
              if (_1 instanceof Right) {
                  return g(_1.value0);
              };
              throw new Error("Failed pattern match at Data.Either line 28, column 1 - line 29, column 1: " + [ f.constructor.name, g.constructor.name, _1.constructor.name ]);
          };
      };
  };
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;;
 
})(PS["Data.Either"] = PS["Data.Either"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Traversable = PS["Data.Traversable"];     
  var NonEmpty = (function () {
      function NonEmpty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NonEmpty.create = function (value0) {
          return function (value1) {
              return new NonEmpty(value0, value1);
          };
      };
      return NonEmpty;
  })();
  var $colon$bar = NonEmpty.create;
  var singleton = function (__dict_Plus_3) {
      return function (a) {
          return new NonEmpty(a, Control_Plus.empty(__dict_Plus_3));
      };
  };
  var oneOf = function (__dict_Alternative_8) {
      return function (_3) {
          return Control_Alt["<|>"]((__dict_Alternative_8["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(Prelude.pure(__dict_Alternative_8["__superclass_Prelude.Applicative_0"]())(_3.value0))(_3.value1);
      };
  };
  var functorNonEmpty = function (__dict_Functor_9) {
      return new Prelude.Functor(function (f) {
          return function (_9) {
              return new NonEmpty(f(_9.value0), Prelude.map(__dict_Functor_9)(f)(_9.value1));
          };
      });
  };
  var foldl1 = function (__dict_Foldable_10) {
      return function (f) {
          return function (_0) {
              return Data_Foldable.foldl(__dict_Foldable_10)(f)(_0.value0)(_0.value1);
          };
      };
  };
  var foldableNonEmpty = function (__dict_Foldable_11) {
      return new Data_Foldable.Foldable(function (__dict_Monoid_12) {
          return function (f) {
              return function (_10) {
                  return Prelude["<>"](__dict_Monoid_12["__superclass_Prelude.Semigroup_0"]())(f(_10.value0))(Data_Foldable.foldMap(__dict_Foldable_11)(__dict_Monoid_12)(f)(_10.value1));
              };
          };
      }, function (f) {
          return function (b) {
              return function (_11) {
                  return Data_Foldable.foldl(__dict_Foldable_11)(f)(f(b)(_11.value0))(_11.value1);
              };
          };
      }, function (f) {
          return function (b) {
              return function (_12) {
                  return f(_12.value0)(Data_Foldable.foldr(__dict_Foldable_11)(f)(b)(_12.value1));
              };
          };
      });
  };
  exports["NonEmpty"] = NonEmpty;
  exports["oneOf"] = oneOf;
  exports["foldl1"] = foldl1;
  exports[":|"] = $colon$bar;
  exports["singleton"] = singleton;
  exports["functorNonEmpty"] = functorNonEmpty;
  exports["foldableNonEmpty"] = foldableNonEmpty;;
 
})(PS["Data.NonEmpty"] = PS["Data.NonEmpty"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];     
  var This = (function () {
      function This(value0) {
          this.value0 = value0;
      };
      This.create = function (value0) {
          return new This(value0);
      };
      return This;
  })();
  var That = (function () {
      function That(value0) {
          this.value0 = value0;
      };
      That.create = function (value0) {
          return new That(value0);
      };
      return That;
  })();
  var Both = (function () {
      function Both(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Both.create = function (value0) {
          return function (value1) {
              return new Both(value0, value1);
          };
      };
      return Both;
  })();
  var theseRight = function (_7) {
      if (_7 instanceof Both) {
          return new Data_Maybe.Just(_7.value1);
      };
      if (_7 instanceof That) {
          return new Data_Maybe.Just(_7.value0);
      };
      return Data_Maybe.Nothing.value;
  };
  var theseLeft = function (_6) {
      if (_6 instanceof Both) {
          return new Data_Maybe.Just(_6.value0);
      };
      if (_6 instanceof This) {
          return new Data_Maybe.Just(_6.value0);
      };
      return Data_Maybe.Nothing.value;
  };
  var semigroupThese = function (__dict_Semigroup_2) {
      return function (__dict_Semigroup_3) {
          return new Prelude.Semigroup(function (_8) {
              return function (_9) {
                  if (_8 instanceof This && _9 instanceof This) {
                      return new This(Prelude["<>"](__dict_Semigroup_2)(_8.value0)(_9.value0));
                  };
                  if (_8 instanceof This && _9 instanceof That) {
                      return new Both(_8.value0, _9.value0);
                  };
                  if (_8 instanceof This && _9 instanceof Both) {
                      return new Both(Prelude["<>"](__dict_Semigroup_2)(_8.value0)(_9.value0), _9.value1);
                  };
                  if (_8 instanceof That && _9 instanceof This) {
                      return new Both(_9.value0, _8.value0);
                  };
                  if (_8 instanceof That && _9 instanceof That) {
                      return new That(Prelude["<>"](__dict_Semigroup_3)(_8.value0)(_9.value0));
                  };
                  if (_8 instanceof That && _9 instanceof Both) {
                      return new Both(_9.value0, Prelude["<>"](__dict_Semigroup_3)(_8.value0)(_9.value1));
                  };
                  if (_8 instanceof Both && _9 instanceof This) {
                      return new Both(Prelude["<>"](__dict_Semigroup_2)(_8.value0)(_9.value0), _8.value1);
                  };
                  if (_8 instanceof Both && _9 instanceof That) {
                      return new Both(_8.value0, Prelude["<>"](__dict_Semigroup_3)(_8.value1)(_9.value0));
                  };
                  if (_8 instanceof Both && _9 instanceof Both) {
                      return new Both(Prelude["<>"](__dict_Semigroup_2)(_8.value0)(_9.value0), Prelude["<>"](__dict_Semigroup_3)(_8.value1)(_9.value1));
                  };
                  throw new Error("Failed pattern match at Data.These line 30, column 1 - line 41, column 1: " + [ _8.constructor.name, _9.constructor.name ]);
              };
          });
      };
  };
  exports["This"] = This;
  exports["That"] = That;
  exports["Both"] = Both;
  exports["theseRight"] = theseRight;
  exports["theseLeft"] = theseLeft;
  exports["semigroupThese"] = semigroupThese;;
 
})(PS["Data.These"] = PS["Data.These"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];     
  var Profunctor = function (dimap) {
      this.dimap = dimap;
  };
  var profunctorFn = new Profunctor(function (a2b) {
      return function (c2d) {
          return function (b2c) {
              return Prelude[">>>"](Prelude.semigroupoidFn)(a2b)(Prelude[">>>"](Prelude.semigroupoidFn)(b2c)(c2d));
          };
      };
  });
  var dimap = function (dict) {
      return dict.dimap;
  };
  exports["Profunctor"] = Profunctor;
  exports["dimap"] = dimap;
  exports["profunctorFn"] = profunctorFn;;
 
})(PS["Data.Profunctor"] = PS["Data.Profunctor"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Profunctor = PS["Data.Profunctor"];
  var Data_Tuple = PS["Data.Tuple"];     
  var Strong = function (__superclass_Data$dotProfunctor$dotProfunctor_0, first, second) {
      this["__superclass_Data.Profunctor.Profunctor_0"] = __superclass_Data$dotProfunctor$dotProfunctor_0;
      this.first = first;
      this.second = second;
  };
  var strongFn = new Strong(function () {
      return Data_Profunctor.profunctorFn;
  }, function (a2b) {
      return function (_0) {
          return new Data_Tuple.Tuple(a2b(_0.value0), _0.value1);
      };
  }, Prelude["<$>"](Data_Tuple.functorTuple));
  var second = function (dict) {
      return dict.second;
  };
  var first = function (dict) {
      return dict.first;
  };
  exports["Strong"] = Strong;
  exports["second"] = second;
  exports["first"] = first;
  exports["strongFn"] = strongFn;;
 
})(PS["Data.Profunctor.Strong"] = PS["Data.Profunctor.Strong"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];     
  var IsString = function (fromString) {
      this.fromString = fromString;
  };
  var isStringString = new IsString(Prelude.id(Prelude.categoryFn));
  var fromString = function (dict) {
      return dict.fromString;
  };
  exports["IsString"] = IsString;
  exports["fromString"] = fromString;
  exports["isStringString"] = isStringString;;
 
})(PS["CSS.String"] = PS["CSS.String"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Data_Tuple = PS["Data.Tuple"];
  var CSS_String = PS["CSS.String"];
  var Control_Alternative = PS["Control.Alternative"];     
  var Prefixed = (function () {
      function Prefixed(value0) {
          this.value0 = value0;
      };
      Prefixed.create = function (value0) {
          return new Prefixed(value0);
      };
      return Prefixed;
  })();
  var Plain = (function () {
      function Plain(value0) {
          this.value0 = value0;
      };
      Plain.create = function (value0) {
          return new Plain(value0);
      };
      return Plain;
  })();
  var Value = function (x) {
      return x;
  };
  var Literal = function (x) {
      return x;
  };
  var Key = function (x) {
      return x;
  };
  var Val = function (value) {
      this.value = value;
  };
  var value = function (dict) {
      return dict.value;
  };
  var valValue = new Val(Prelude.id(Prelude.categoryFn));
  var semigroupPrefixed = new Prelude.Semigroup(function (_2) {
      return function (_3) {
          if (_2 instanceof Plain && _3 instanceof Plain) {
              return Plain.create(_2.value0 + _3.value0);
          };
          if (_2 instanceof Plain && _3 instanceof Prefixed) {
              return Prefixed.create(Prelude["<$>"](Prelude.functorArray)(Data_Profunctor_Strong.second(Data_Profunctor_Strong.strongFn)(Prelude["<>"](Prelude.semigroupString)(_2.value0)))(_3.value0));
          };
          if (_2 instanceof Prefixed && _3 instanceof Plain) {
              return Prefixed.create(Prelude["<$>"](Prelude.functorArray)(Data_Profunctor_Strong.second(Data_Profunctor_Strong.strongFn)(Prelude["<>"](Prelude.semigroupString)(_3.value0)))(_2.value0));
          };
          if (_2 instanceof Prefixed && _3 instanceof Prefixed) {
              return Prefixed.create(Prelude["<>"](Prelude.semigroupArray)(_2.value0)(_3.value0));
          };
          throw new Error("Failed pattern match at CSS.Property line 20, column 1 - line 26, column 1: " + [ _2.constructor.name, _3.constructor.name ]);
      };
  });
  var semigroupValue = new Prelude.Semigroup(function (_4) {
      return function (_5) {
          return Value(Prelude["<>"](semigroupPrefixed)(_4)(_5));
      };
  });
  var quote = function (s) {
      return "\"" + (s + "\"");
  };
  var plain = function (_0) {
      if (_0 instanceof Prefixed) {
          return Data_Maybe.fromMaybe("")(Data_Tuple.lookup(Data_Foldable.foldableArray)(Prelude.eqString)("")(_0.value0));
      };
      if (_0 instanceof Plain) {
          return _0.value0;
      };
      throw new Error("Failed pattern match at CSS.Property line 29, column 1 - line 30, column 1: " + [ _0.constructor.name ]);
  };
  var monoidPrefixed = new Data_Monoid.Monoid(function () {
      return semigroupPrefixed;
  }, new Plain(Data_Monoid.mempty(Data_Monoid.monoidString)));
  var monoidValue = new Data_Monoid.Monoid(function () {
      return semigroupValue;
  }, Data_Monoid.mempty(monoidPrefixed));
  var isStringPrefixed = new CSS_String.IsString(Plain.create);
  var isStringValue = new CSS_String.IsString(function (_28) {
      return Value(CSS_String.fromString(isStringPrefixed)(_28));
  });
  var noCommas = function (__dict_Val_4) {
      return function (_29) {
          return Data_Foldable.intercalate(Data_Foldable.foldableArray)(monoidValue)(CSS_String.fromString(isStringValue)(" "))(Prelude["<$>"](Prelude.functorArray)(value(__dict_Val_4))(_29));
      };
  };
  var valList = function (__dict_Val_3) {
      return new Val(function (_30) {
          return Data_Foldable.intercalate(Data_Foldable.foldableArray)(monoidValue)(CSS_String.fromString(isStringValue)(", "))(Prelude["<$>"](Prelude.functorArray)(value(__dict_Val_3))(_30));
      });
  };
  var valNonEmpty = function (__dict_Val_2) {
      return new Val(function (_31) {
          return value(valList(__dict_Val_2))(Data_NonEmpty.oneOf(Control_Alternative.alternativeArray)(_31));
      });
  };
  var valLiteral = new Val(function (_6) {
      return CSS_String.fromString(isStringValue)(quote(_6));
  });
  var valNumber = new Val(function (_32) {
      return CSS_String.fromString(isStringValue)(Prelude.show(Prelude.showNumber)(_32));
  });
  var valString = new Val(CSS_String.fromString(isStringValue));
  var valTuple = function (__dict_Val_0) {
      return function (__dict_Val_1) {
          return new Val(function (_7) {
              return Prelude["<>"](semigroupValue)(value(__dict_Val_0)(_7.value0))(Prelude["<>"](semigroupValue)(CSS_String.fromString(isStringValue)(" "))(value(__dict_Val_1)(_7.value1)));
          });
      };
  };
  var isStringKey = new CSS_String.IsString(function (_33) {
      return Key(CSS_String.fromString(isStringPrefixed)(_33));
  });
  var cast = function (_1) {
      return _1;
  };
  exports["Literal"] = Literal;
  exports["Value"] = Value;
  exports["Key"] = Key;
  exports["Prefixed"] = Prefixed;
  exports["Plain"] = Plain;
  exports["Val"] = Val;
  exports["noCommas"] = noCommas;
  exports["value"] = value;
  exports["cast"] = cast;
  exports["quote"] = quote;
  exports["plain"] = plain;
  exports["isStringPrefixed"] = isStringPrefixed;
  exports["semigroupPrefixed"] = semigroupPrefixed;
  exports["monoidPrefixed"] = monoidPrefixed;
  exports["isStringKey"] = isStringKey;
  exports["isStringValue"] = isStringValue;
  exports["semigroupValue"] = semigroupValue;
  exports["monoidValue"] = monoidValue;
  exports["valString"] = valString;
  exports["valLiteral"] = valLiteral;
  exports["valValue"] = valValue;
  exports["valTuple"] = valTuple;
  exports["valNumber"] = valNumber;
  exports["valList"] = valList;
  exports["valNonEmpty"] = valNonEmpty;;
 
})(PS["CSS.Property"] = PS["CSS.Property"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Generic


  //------------------------------------------------------------------------------
  // Zipping ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.zipAll = function(f) {
      return function(xs) {
          return function(ys) {
              var l = xs.length < ys.length ? xs.length : ys.length;
              for (var i = 0; i < l; i++) {
                  if (!f(xs[i])(ys[i])) {
                      return false;
                  }
              }
              return true;
          };
      };
  };

  exports.zipCompare = function(f) {
      return function(xs) {
          return function(ys) {
              var i = 0;
              var xlen = xs.length;
              var ylen = ys.length;
              while (i < xlen && i < ylen) {
                  var o = f(xs[i])(ys[i]);
                  if (o !== 0) {
                      return o;
                  }
                  i++;
              }
              if (xlen === ylen) {
                  return 0;
              } else if (xlen > ylen) {
                  return -1;
              } else {
                  return 1;
              }
          };
      };
  };
 
})(PS["Data.Generic"] = PS["Data.Generic"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Proxy = (function () {
      function Proxy() {

      };
      Proxy.value = new Proxy();
      return Proxy;
  })();
  exports["Proxy"] = Proxy;;
 
})(PS["Type.Proxy"] = PS["Type.Proxy"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Data.Generic"];
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Array = PS["Data.Array"];
  var Data_String = PS["Data.String"];
  var Type_Proxy = PS["Type.Proxy"];     
  var SProd = (function () {
      function SProd(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SProd.create = function (value0) {
          return function (value1) {
              return new SProd(value0, value1);
          };
      };
      return SProd;
  })();
  var SRecord = (function () {
      function SRecord(value0) {
          this.value0 = value0;
      };
      SRecord.create = function (value0) {
          return new SRecord(value0);
      };
      return SRecord;
  })();
  var SNumber = (function () {
      function SNumber(value0) {
          this.value0 = value0;
      };
      SNumber.create = function (value0) {
          return new SNumber(value0);
      };
      return SNumber;
  })();
  var SBoolean = (function () {
      function SBoolean(value0) {
          this.value0 = value0;
      };
      SBoolean.create = function (value0) {
          return new SBoolean(value0);
      };
      return SBoolean;
  })();
  var SInt = (function () {
      function SInt(value0) {
          this.value0 = value0;
      };
      SInt.create = function (value0) {
          return new SInt(value0);
      };
      return SInt;
  })();
  var SString = (function () {
      function SString(value0) {
          this.value0 = value0;
      };
      SString.create = function (value0) {
          return new SString(value0);
      };
      return SString;
  })();
  var SChar = (function () {
      function SChar(value0) {
          this.value0 = value0;
      };
      SChar.create = function (value0) {
          return new SChar(value0);
      };
      return SChar;
  })();
  var SArray = (function () {
      function SArray(value0) {
          this.value0 = value0;
      };
      SArray.create = function (value0) {
          return new SArray(value0);
      };
      return SArray;
  })();
  var SigProd = (function () {
      function SigProd(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SigProd.create = function (value0) {
          return function (value1) {
              return new SigProd(value0, value1);
          };
      };
      return SigProd;
  })();
  var SigString = (function () {
      function SigString() {

      };
      SigString.value = new SigString();
      return SigString;
  })();
  var SigArray = (function () {
      function SigArray(value0) {
          this.value0 = value0;
      };
      SigArray.create = function (value0) {
          return new SigArray(value0);
      };
      return SigArray;
  })();
  var Generic = function (fromSpine, toSignature, toSpine) {
      this.fromSpine = fromSpine;
      this.toSignature = toSignature;
      this.toSpine = toSpine;
  };
  var toSpine = function (dict) {
      return dict.toSpine;
  };
  var toSignature = function (dict) {
      return dict.toSignature;
  };
  var genericString = new Generic(function (_10) {
      if (_10 instanceof SString) {
          return new Data_Maybe.Just(_10.value0);
      };
      return Data_Maybe.Nothing.value;
  }, function (_9) {
      return SigString.value;
  }, function (x) {
      return new SString(x);
  });
  var fromSpine = function (dict) {
      return dict.fromSpine;
  };
  var eqGeneric = new Prelude.Eq(function (_29) {
      return function (_30) {
          if (_29 instanceof SProd && _30 instanceof SProd) {
              return Prelude["=="](Prelude.eqString)(_29.value0)(_30.value0) && (Data_Array.length(_29.value1) === Data_Array.length(_30.value1) && $foreign.zipAll(function (x) {
                  return function (y) {
                      return Prelude["=="](eqGeneric)(x(Prelude.unit))(y(Prelude.unit));
                  };
              })(_29.value1)(_30.value1));
          };
          if (_29 instanceof SRecord && _30 instanceof SRecord) {
              var go = function (x) {
                  return function (y) {
                      return Prelude["=="](Prelude.eqString)(x.recLabel)(y.recLabel) && Prelude["=="](eqGeneric)(x.recValue(Prelude.unit))(y.recValue(Prelude.unit));
                  };
              };
              return Data_Array.length(_29.value0) === Data_Array.length(_30.value0) && $foreign.zipAll(go)(_29.value0)(_30.value0);
          };
          if (_29 instanceof SInt && _30 instanceof SInt) {
              return _29.value0 === _30.value0;
          };
          if (_29 instanceof SNumber && _30 instanceof SNumber) {
              return _29.value0 === _30.value0;
          };
          if (_29 instanceof SBoolean && _30 instanceof SBoolean) {
              return Prelude["=="](Prelude.eqBoolean)(_29.value0)(_30.value0);
          };
          if (_29 instanceof SChar && _30 instanceof SChar) {
              return Prelude["=="](Prelude.eqChar)(_29.value0)(_30.value0);
          };
          if (_29 instanceof SString && _30 instanceof SString) {
              return Prelude["=="](Prelude.eqString)(_29.value0)(_30.value0);
          };
          if (_29 instanceof SArray && _30 instanceof SArray) {
              return Data_Array.length(_29.value0) === Data_Array.length(_30.value0) && $foreign.zipAll(function (x) {
                  return function (y) {
                      return Prelude["=="](eqGeneric)(x(Prelude.unit))(y(Prelude.unit));
                  };
              })(_29.value0)(_30.value0);
          };
          return false;
      };
  });
  var gEq = function (__dict_Generic_1) {
      return function (x) {
          return function (y) {
              return Prelude["=="](eqGeneric)(toSpine(__dict_Generic_1)(x))(toSpine(__dict_Generic_1)(y));
          };
      };
  };
  var ordGeneric = new Prelude.Ord(function () {
      return eqGeneric;
  }, function (_31) {
      return function (_32) {
          if (_31 instanceof SProd && _32 instanceof SProd) {
              var _97 = Prelude.compare(Prelude.ordString)(_31.value0)(_32.value0);
              if (_97 instanceof Prelude.EQ) {
                  return Prelude.compare(Prelude.ordInt)(0)($foreign.zipCompare(function (x) {
                      return function (y) {
                          var _98 = Prelude.compare(ordGeneric)(x(Prelude.unit))(y(Prelude.unit));
                          if (_98 instanceof Prelude.EQ) {
                              return 0;
                          };
                          if (_98 instanceof Prelude.LT) {
                              return 1;
                          };
                          if (_98 instanceof Prelude.GT) {
                              return -1;
                          };
                          throw new Error("Failed pattern match: " + [ _98.constructor.name ]);
                      };
                  })(_31.value1)(_32.value1));
              };
              return _97;
          };
          if (_31 instanceof SProd) {
              return Prelude.LT.value;
          };
          if (_32 instanceof SProd) {
              return Prelude.GT.value;
          };
          if (_31 instanceof SRecord && _32 instanceof SRecord) {
              var go = function (x) {
                  return function (y) {
                      var _107 = Prelude.compare(Prelude.ordString)(x.recLabel)(y.recLabel);
                      if (_107 instanceof Prelude.EQ) {
                          var _108 = Prelude.compare(ordGeneric)(x.recValue(Prelude.unit))(y.recValue(Prelude.unit));
                          if (_108 instanceof Prelude.EQ) {
                              return 0;
                          };
                          if (_108 instanceof Prelude.LT) {
                              return 1;
                          };
                          if (_108 instanceof Prelude.GT) {
                              return -1;
                          };
                          throw new Error("Failed pattern match at Data.Generic line 227, column 15 - line 234, column 5: " + [ _108.constructor.name ]);
                      };
                      if (_107 instanceof Prelude.LT) {
                          return 1;
                      };
                      if (_107 instanceof Prelude.GT) {
                          return -1;
                      };
                      throw new Error("Failed pattern match at Data.Generic line 227, column 15 - line 234, column 5: " + [ _107.constructor.name ]);
                  };
              };
              return Prelude.compare(Prelude.ordInt)(0)($foreign.zipCompare(go)(_31.value0)(_32.value0));
          };
          if (_31 instanceof SRecord) {
              return Prelude.LT.value;
          };
          if (_32 instanceof SRecord) {
              return Prelude.GT.value;
          };
          if (_31 instanceof SInt && _32 instanceof SInt) {
              return Prelude.compare(Prelude.ordInt)(_31.value0)(_32.value0);
          };
          if (_31 instanceof SInt) {
              return Prelude.LT.value;
          };
          if (_32 instanceof SInt) {
              return Prelude.GT.value;
          };
          if (_31 instanceof SBoolean && _32 instanceof SBoolean) {
              return Prelude.compare(Prelude.ordBoolean)(_31.value0)(_32.value0);
          };
          if (_31 instanceof SBoolean) {
              return Prelude.LT.value;
          };
          if (_32 instanceof SBoolean) {
              return Prelude.GT.value;
          };
          if (_31 instanceof SNumber && _32 instanceof SNumber) {
              return Prelude.compare(Prelude.ordNumber)(_31.value0)(_32.value0);
          };
          if (_31 instanceof SNumber) {
              return Prelude.LT.value;
          };
          if (_32 instanceof SNumber) {
              return Prelude.GT.value;
          };
          if (_31 instanceof SString && _32 instanceof SString) {
              return Prelude.compare(Prelude.ordString)(_31.value0)(_32.value0);
          };
          if (_31 instanceof SString) {
              return Prelude.LT.value;
          };
          if (_32 instanceof SString) {
              return Prelude.GT.value;
          };
          if (_31 instanceof SChar && _32 instanceof SChar) {
              return Prelude.compare(Prelude.ordChar)(_31.value0)(_32.value0);
          };
          if (_31 instanceof SChar) {
              return Prelude.LT.value;
          };
          if (_32 instanceof SChar) {
              return Prelude.GT.value;
          };
          if (_31 instanceof SArray && _32 instanceof SArray) {
              return Prelude.compare(Prelude.ordInt)(0)($foreign.zipCompare(function (x) {
                  return function (y) {
                      var _133 = Prelude.compare(ordGeneric)(x(Prelude.unit))(y(Prelude.unit));
                      if (_133 instanceof Prelude.EQ) {
                          return 0;
                      };
                      if (_133 instanceof Prelude.LT) {
                          return 1;
                      };
                      if (_133 instanceof Prelude.GT) {
                          return -1;
                      };
                      throw new Error("Failed pattern match: " + [ _133.constructor.name ]);
                  };
              })(_31.value0)(_32.value0));
          };
          throw new Error("Failed pattern match: " + [ _31.constructor.name, _32.constructor.name ]);
      };
  });
  var gCompare = function (__dict_Generic_2) {
      return function (x) {
          return function (y) {
              return Prelude.compare(ordGeneric)(toSpine(__dict_Generic_2)(x))(toSpine(__dict_Generic_2)(y));
          };
      };
  };
  var anyProxy = Type_Proxy.Proxy.value;
  var genericArray = function (__dict_Generic_3) {
      return new Generic(function (_15) {
          if (_15 instanceof SArray) {
              return Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(function (_173) {
                  return fromSpine(__dict_Generic_3)((function (_1) {
                      return _1(Prelude.unit);
                  })(_173));
              })(_15.value0);
          };
          return Data_Maybe.Nothing.value;
      }, function (x) {
          var lowerProxy = function (_16) {
              return anyProxy;
          };
          return new SigArray(function (unit) {
              return toSignature(__dict_Generic_3)(lowerProxy(x));
          });
      }, function (xs) {
          return new SArray(Prelude["<$>"](Prelude.functorArray)(function (x) {
              return function (y) {
                  return toSpine(__dict_Generic_3)(x);
              };
          })(xs));
      });
  };
  exports["SigProd"] = SigProd;
  exports["SigString"] = SigString;
  exports["SigArray"] = SigArray;
  exports["SProd"] = SProd;
  exports["SRecord"] = SRecord;
  exports["SNumber"] = SNumber;
  exports["SBoolean"] = SBoolean;
  exports["SInt"] = SInt;
  exports["SString"] = SString;
  exports["SChar"] = SChar;
  exports["SArray"] = SArray;
  exports["Generic"] = Generic;
  exports["gCompare"] = gCompare;
  exports["gEq"] = gEq;
  exports["fromSpine"] = fromSpine;
  exports["toSignature"] = toSignature;
  exports["toSpine"] = toSpine;
  exports["genericString"] = genericString;
  exports["genericArray"] = genericArray;
  exports["eqGeneric"] = eqGeneric;
  exports["ordGeneric"] = ordGeneric;;
 
})(PS["Data.Generic"] = PS["Data.Generic"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Generic = PS["Data.Generic"];
  var Data_String = PS["Data.String"];
  var CSS_String = PS["CSS.String"];
  var Data_Maybe = PS["Data.Maybe"];     
  var Id = (function () {
      function Id(value0) {
          this.value0 = value0;
      };
      Id.create = function (value0) {
          return new Id(value0);
      };
      return Id;
  })();
  var Class = (function () {
      function Class(value0) {
          this.value0 = value0;
      };
      Class.create = function (value0) {
          return new Class(value0);
      };
      return Class;
  })();
  var Attr = (function () {
      function Attr(value0) {
          this.value0 = value0;
      };
      Attr.create = function (value0) {
          return new Attr(value0);
      };
      return Attr;
  })();
  var AttrVal = (function () {
      function AttrVal(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AttrVal.create = function (value0) {
          return function (value1) {
              return new AttrVal(value0, value1);
          };
      };
      return AttrVal;
  })();
  var AttrBegins = (function () {
      function AttrBegins(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AttrBegins.create = function (value0) {
          return function (value1) {
              return new AttrBegins(value0, value1);
          };
      };
      return AttrBegins;
  })();
  var AttrEnds = (function () {
      function AttrEnds(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AttrEnds.create = function (value0) {
          return function (value1) {
              return new AttrEnds(value0, value1);
          };
      };
      return AttrEnds;
  })();
  var AttrContains = (function () {
      function AttrContains(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AttrContains.create = function (value0) {
          return function (value1) {
              return new AttrContains(value0, value1);
          };
      };
      return AttrContains;
  })();
  var AttrSpace = (function () {
      function AttrSpace(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AttrSpace.create = function (value0) {
          return function (value1) {
              return new AttrSpace(value0, value1);
          };
      };
      return AttrSpace;
  })();
  var AttrHyph = (function () {
      function AttrHyph(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AttrHyph.create = function (value0) {
          return function (value1) {
              return new AttrHyph(value0, value1);
          };
      };
      return AttrHyph;
  })();
  var Pseudo = (function () {
      function Pseudo(value0) {
          this.value0 = value0;
      };
      Pseudo.create = function (value0) {
          return new Pseudo(value0);
      };
      return Pseudo;
  })();
  var PseudoFunc = (function () {
      function PseudoFunc(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      PseudoFunc.create = function (value0) {
          return function (value1) {
              return new PseudoFunc(value0, value1);
          };
      };
      return PseudoFunc;
  })();
  var Star = (function () {
      function Star() {

      };
      Star.value = new Star();
      return Star;
  })();
  var Elem = (function () {
      function Elem(value0) {
          this.value0 = value0;
      };
      Elem.create = function (value0) {
          return new Elem(value0);
      };
      return Elem;
  })();
  var PathChild = (function () {
      function PathChild(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      PathChild.create = function (value0) {
          return function (value1) {
              return new PathChild(value0, value1);
          };
      };
      return PathChild;
  })();
  var Deep = (function () {
      function Deep(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Deep.create = function (value0) {
          return function (value1) {
              return new Deep(value0, value1);
          };
      };
      return Deep;
  })();
  var Adjacent = (function () {
      function Adjacent(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Adjacent.create = function (value0) {
          return function (value1) {
              return new Adjacent(value0, value1);
          };
      };
      return Adjacent;
  })();
  var Combined = (function () {
      function Combined(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Combined.create = function (value0) {
          return function (value1) {
              return new Combined(value0, value1);
          };
      };
      return Combined;
  })();
  var Selector = (function () {
      function Selector(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Selector.create = function (value0) {
          return function (value1) {
              return new Selector(value0, value1);
          };
      };
      return Selector;
  })();
  var $$with = function (_0) {
      return function (_1) {
          return new Selector(Prelude["++"](Prelude.semigroupArray)(_0.value0)(_1), _0.value1);
      };
  };
  var $hash$hash = $$with;
  var star = new Selector([  ], Star.value);
  var isStringSelector = new CSS_String.IsString(function (s) {
      var _42 = Data_String.take(1)(s);
      if (_42 === "#") {
          return new Selector([ Id.create(Data_String.drop(1)(s)) ], Star.value);
      };
      if (_42 === ".") {
          return new Selector([ Class.create(Data_String.drop(1)(s)) ], Star.value);
      };
      return new Selector([  ], new Elem(s));
  });
  var isStringRefinement = new CSS_String.IsString(function (s) {
      return [ (function () {
          var _43 = Data_String.take(1)(s);
          if (_43 === "#") {
              return Id.create(Data_String.drop(1)(s));
          };
          if (_43 === ".") {
              return Class.create(Data_String.drop(1)(s));
          };
          if (_43 === ":") {
              return Pseudo.create(Data_String.drop(1)(s));
          };
          if (_43 === "@") {
              return Attr.create(Data_String.drop(1)(s));
          };
          return new Attr(s);
      })() ];
  });
  var genericPredicate = new Data_Generic.Generic(function ($dollarx) {
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "CSS.Selector.Id" && $dollarx.value1.length === 1)) {
          return Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Id.create))(Data_Generic.fromSpine(Data_Generic.genericString)($dollarx.value1[0](Prelude.unit)));
      };
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "CSS.Selector.Class" && $dollarx.value1.length === 1)) {
          return Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Class.create))(Data_Generic.fromSpine(Data_Generic.genericString)($dollarx.value1[0](Prelude.unit)));
      };
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "CSS.Selector.Attr" && $dollarx.value1.length === 1)) {
          return Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Attr.create))(Data_Generic.fromSpine(Data_Generic.genericString)($dollarx.value1[0](Prelude.unit)));
      };
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "CSS.Selector.AttrVal" && $dollarx.value1.length === 2)) {
          return Prelude.apply(Data_Maybe.applyMaybe)(Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(AttrVal.create))(Data_Generic.fromSpine(Data_Generic.genericString)($dollarx.value1[0](Prelude.unit))))(Data_Generic.fromSpine(Data_Generic.genericString)($dollarx.value1[1](Prelude.unit)));
      };
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "CSS.Selector.AttrBegins" && $dollarx.value1.length === 2)) {
          return Prelude.apply(Data_Maybe.applyMaybe)(Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(AttrBegins.create))(Data_Generic.fromSpine(Data_Generic.genericString)($dollarx.value1[0](Prelude.unit))))(Data_Generic.fromSpine(Data_Generic.genericString)($dollarx.value1[1](Prelude.unit)));
      };
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "CSS.Selector.AttrEnds" && $dollarx.value1.length === 2)) {
          return Prelude.apply(Data_Maybe.applyMaybe)(Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(AttrEnds.create))(Data_Generic.fromSpine(Data_Generic.genericString)($dollarx.value1[0](Prelude.unit))))(Data_Generic.fromSpine(Data_Generic.genericString)($dollarx.value1[1](Prelude.unit)));
      };
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "CSS.Selector.AttrContains" && $dollarx.value1.length === 2)) {
          return Prelude.apply(Data_Maybe.applyMaybe)(Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(AttrContains.create))(Data_Generic.fromSpine(Data_Generic.genericString)($dollarx.value1[0](Prelude.unit))))(Data_Generic.fromSpine(Data_Generic.genericString)($dollarx.value1[1](Prelude.unit)));
      };
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "CSS.Selector.AttrSpace" && $dollarx.value1.length === 2)) {
          return Prelude.apply(Data_Maybe.applyMaybe)(Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(AttrSpace.create))(Data_Generic.fromSpine(Data_Generic.genericString)($dollarx.value1[0](Prelude.unit))))(Data_Generic.fromSpine(Data_Generic.genericString)($dollarx.value1[1](Prelude.unit)));
      };
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "CSS.Selector.AttrHyph" && $dollarx.value1.length === 2)) {
          return Prelude.apply(Data_Maybe.applyMaybe)(Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(AttrHyph.create))(Data_Generic.fromSpine(Data_Generic.genericString)($dollarx.value1[0](Prelude.unit))))(Data_Generic.fromSpine(Data_Generic.genericString)($dollarx.value1[1](Prelude.unit)));
      };
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "CSS.Selector.Pseudo" && $dollarx.value1.length === 1)) {
          return Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Pseudo.create))(Data_Generic.fromSpine(Data_Generic.genericString)($dollarx.value1[0](Prelude.unit)));
      };
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "CSS.Selector.PseudoFunc" && $dollarx.value1.length === 2)) {
          return Prelude.apply(Data_Maybe.applyMaybe)(Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(PseudoFunc.create))(Data_Generic.fromSpine(Data_Generic.genericString)($dollarx.value1[0](Prelude.unit))))(Data_Generic.fromSpine(Data_Generic.genericArray(Data_Generic.genericString))($dollarx.value1[1](Prelude.unit)));
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd("CSS.Selector.Predicate", [ {
          sigConstructor: "CSS.Selector.Id", 
          sigValues: [ function ($dollarq_1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "CSS.Selector.Class", 
          sigValues: [ function ($dollarq_1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "CSS.Selector.Attr", 
          sigValues: [ function ($dollarq_1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "CSS.Selector.AttrVal", 
          sigValues: [ function ($dollarq_1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          }, function ($dollarq_1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "CSS.Selector.AttrBegins", 
          sigValues: [ function ($dollarq_1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          }, function ($dollarq_1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "CSS.Selector.AttrEnds", 
          sigValues: [ function ($dollarq_1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          }, function ($dollarq_1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "CSS.Selector.AttrContains", 
          sigValues: [ function ($dollarq_1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          }, function ($dollarq_1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "CSS.Selector.AttrSpace", 
          sigValues: [ function ($dollarq_1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          }, function ($dollarq_1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "CSS.Selector.AttrHyph", 
          sigValues: [ function ($dollarq_1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          }, function ($dollarq_1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "CSS.Selector.Pseudo", 
          sigValues: [ function ($dollarq_1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "CSS.Selector.PseudoFunc", 
          sigValues: [ function ($dollarq_1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          }, function ($dollarq_1) {
              return Data_Generic.toSignature(Data_Generic.genericArray(Data_Generic.genericString))(Data_Generic.anyProxy);
          } ]
      } ]);
  }, function ($dollarx) {
      if ($dollarx instanceof Id) {
          return new Data_Generic.SProd("CSS.Selector.Id", [ function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericString)($dollarx.value0);
          } ]);
      };
      if ($dollarx instanceof Class) {
          return new Data_Generic.SProd("CSS.Selector.Class", [ function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericString)($dollarx.value0);
          } ]);
      };
      if ($dollarx instanceof Attr) {
          return new Data_Generic.SProd("CSS.Selector.Attr", [ function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericString)($dollarx.value0);
          } ]);
      };
      if ($dollarx instanceof AttrVal) {
          return new Data_Generic.SProd("CSS.Selector.AttrVal", [ function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericString)($dollarx.value0);
          }, function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericString)($dollarx.value1);
          } ]);
      };
      if ($dollarx instanceof AttrBegins) {
          return new Data_Generic.SProd("CSS.Selector.AttrBegins", [ function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericString)($dollarx.value0);
          }, function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericString)($dollarx.value1);
          } ]);
      };
      if ($dollarx instanceof AttrEnds) {
          return new Data_Generic.SProd("CSS.Selector.AttrEnds", [ function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericString)($dollarx.value0);
          }, function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericString)($dollarx.value1);
          } ]);
      };
      if ($dollarx instanceof AttrContains) {
          return new Data_Generic.SProd("CSS.Selector.AttrContains", [ function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericString)($dollarx.value0);
          }, function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericString)($dollarx.value1);
          } ]);
      };
      if ($dollarx instanceof AttrSpace) {
          return new Data_Generic.SProd("CSS.Selector.AttrSpace", [ function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericString)($dollarx.value0);
          }, function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericString)($dollarx.value1);
          } ]);
      };
      if ($dollarx instanceof AttrHyph) {
          return new Data_Generic.SProd("CSS.Selector.AttrHyph", [ function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericString)($dollarx.value0);
          }, function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericString)($dollarx.value1);
          } ]);
      };
      if ($dollarx instanceof Pseudo) {
          return new Data_Generic.SProd("CSS.Selector.Pseudo", [ function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericString)($dollarx.value0);
          } ]);
      };
      if ($dollarx instanceof PseudoFunc) {
          return new Data_Generic.SProd("CSS.Selector.PseudoFunc", [ function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericString)($dollarx.value0);
          }, function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericArray(Data_Generic.genericString))($dollarx.value1);
          } ]);
      };
      throw new Error("Failed pattern match at CSS.Selector line 22, column 1 - line 24, column 1: " + [ $dollarx.constructor.name ]);
  });
  var eqPredicate = new Prelude.Eq(Data_Generic.gEq(genericPredicate));
  var ordPredicate = new Prelude.Ord(function () {
      return eqPredicate;
  }, Data_Generic.gCompare(genericPredicate));
  var element = function (e) {
      return new Selector([  ], new Elem(e));
  };
  var deep = function (a) {
      return function (b) {
          return new Selector([  ], new Deep(a, b));
      };
  };
  var $times$times = deep;
  var child = function (a) {
      return function (b) {
          return new Selector([  ], new PathChild(a, b));
      };
  };
  var $bar$greater = child;
  exports["Selector"] = Selector;
  exports["Star"] = Star;
  exports["Elem"] = Elem;
  exports["PathChild"] = PathChild;
  exports["Deep"] = Deep;
  exports["Adjacent"] = Adjacent;
  exports["Combined"] = Combined;
  exports["Id"] = Id;
  exports["Class"] = Class;
  exports["Attr"] = Attr;
  exports["AttrVal"] = AttrVal;
  exports["AttrBegins"] = AttrBegins;
  exports["AttrEnds"] = AttrEnds;
  exports["AttrContains"] = AttrContains;
  exports["AttrSpace"] = AttrSpace;
  exports["AttrHyph"] = AttrHyph;
  exports["Pseudo"] = Pseudo;
  exports["PseudoFunc"] = PseudoFunc;
  exports["##"] = $hash$hash;
  exports["with"] = $$with;
  exports["|>"] = $bar$greater;
  exports["child"] = child;
  exports["**"] = $times$times;
  exports["deep"] = deep;
  exports["element"] = element;
  exports["star"] = star;
  exports["genericPredicate"] = genericPredicate;
  exports["eqPredicate"] = eqPredicate;
  exports["ordPredicate"] = ordPredicate;
  exports["isStringRefinement"] = isStringRefinement;
  exports["isStringSelector"] = isStringSelector;;
 
})(PS["CSS.Selector"] = PS["CSS.Selector"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Tuple = PS["Data.Tuple"];     
  var MonadWriter = function (__superclass_Prelude$dotMonad_0, listen, pass, writer) {
      this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
      this.listen = listen;
      this.pass = pass;
      this.writer = writer;
  };
  var writer = function (dict) {
      return dict.writer;
  };
  var tell = function (__dict_Monoid_0) {
      return function (__dict_Monad_1) {
          return function (__dict_MonadWriter_2) {
              return function (w) {
                  return writer(__dict_MonadWriter_2)(new Data_Tuple.Tuple(Prelude.unit, w));
              };
          };
      };
  };
  var pass = function (dict) {
      return dict.pass;
  };
  var listen = function (dict) {
      return dict.listen;
  };
  exports["MonadWriter"] = MonadWriter;
  exports["tell"] = tell;
  exports["pass"] = pass;
  exports["listen"] = listen;
  exports["writer"] = writer;;
 
})(PS["Control.Monad.Writer.Class"] = PS["Control.Monad.Writer.Class"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Tuple = PS["Data.Tuple"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans = PS["Control.Monad.Trans"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];     
  var WriterT = function (x) {
      return x;
  };
  var runWriterT = function (_7) {
      return _7;
  };
  var mapWriterT = function (f) {
      return function (m) {
          return WriterT(f(runWriterT(m)));
      };
  };
  var functorWriterT = function (__dict_Functor_22) {
      return new Prelude.Functor(function (f) {
          return mapWriterT(Prelude["<$>"](__dict_Functor_22)(function (_6) {
              return new Data_Tuple.Tuple(f(_6.value0), _6.value1);
          }));
      });
  };
  var applyWriterT = function (__dict_Semigroup_26) {
      return function (__dict_Apply_27) {
          return new Prelude.Apply(function () {
              return functorWriterT(__dict_Apply_27["__superclass_Prelude.Functor_0"]());
          }, function (f) {
              return function (v) {
                  return WriterT((function () {
                      var k = function (_8) {
                          return function (_9) {
                              return new Data_Tuple.Tuple(_8.value0(_9.value0), Prelude["<>"](__dict_Semigroup_26)(_8.value1)(_9.value1));
                          };
                      };
                      return Prelude["<*>"](__dict_Apply_27)(Prelude["<$>"](__dict_Apply_27["__superclass_Prelude.Functor_0"]())(k)(runWriterT(f)))(runWriterT(v));
                  })());
              };
          });
      };
  };
  var bindWriterT = function (__dict_Semigroup_24) {
      return function (__dict_Monad_25) {
          return new Prelude.Bind(function () {
              return applyWriterT(__dict_Semigroup_24)((__dict_Monad_25["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]());
          }, function (m) {
              return function (k) {
                  return WriterT(Prelude.bind(__dict_Monad_25["__superclass_Prelude.Bind_1"]())(runWriterT(m))(function (_1) {
                      return Prelude.bind(__dict_Monad_25["__superclass_Prelude.Bind_1"]())(runWriterT(k(_1.value0)))(function (_0) {
                          return Prelude["return"](__dict_Monad_25["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(_0.value0, Prelude["<>"](__dict_Semigroup_24)(_1.value1)(_0.value1)));
                      });
                  }));
              };
          });
      };
  };
  var applicativeWriterT = function (__dict_Monoid_28) {
      return function (__dict_Applicative_29) {
          return new Prelude.Applicative(function () {
              return applyWriterT(__dict_Monoid_28["__superclass_Prelude.Semigroup_0"]())(__dict_Applicative_29["__superclass_Prelude.Apply_0"]());
          }, function (a) {
              return WriterT(Prelude.pure(__dict_Applicative_29)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(__dict_Monoid_28))));
          });
      };
  };
  var monadWriterT = function (__dict_Monoid_3) {
      return function (__dict_Monad_4) {
          return new Prelude.Monad(function () {
              return applicativeWriterT(__dict_Monoid_3)(__dict_Monad_4["__superclass_Prelude.Applicative_0"]());
          }, function () {
              return bindWriterT(__dict_Monoid_3["__superclass_Prelude.Semigroup_0"]())(__dict_Monad_4);
          });
      };
  };
  var monadWriterWriterT = function (__dict_Monoid_1) {
      return function (__dict_Monad_2) {
          return new Control_Monad_Writer_Class.MonadWriter(function () {
              return monadWriterT(__dict_Monoid_1)(__dict_Monad_2);
          }, function (m) {
              return WriterT(Prelude.bind(__dict_Monad_2["__superclass_Prelude.Bind_1"]())(runWriterT(m))(function (_4) {
                  return Prelude["return"](__dict_Monad_2["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_4.value0, _4.value1), _4.value1));
              }));
          }, function (m) {
              return WriterT(Prelude.bind(__dict_Monad_2["__superclass_Prelude.Bind_1"]())(runWriterT(m))(function (_5) {
                  return Prelude["return"](__dict_Monad_2["__superclass_Prelude.Applicative_0"]())(new Data_Tuple.Tuple(_5.value0.value0, _5.value0.value1(_5.value1)));
              }));
          }, function (_46) {
              return WriterT(Prelude["return"](__dict_Monad_2["__superclass_Prelude.Applicative_0"]())(_46));
          });
      };
  };
  exports["WriterT"] = WriterT;
  exports["mapWriterT"] = mapWriterT;
  exports["runWriterT"] = runWriterT;
  exports["functorWriterT"] = functorWriterT;
  exports["applyWriterT"] = applyWriterT;
  exports["applicativeWriterT"] = applicativeWriterT;
  exports["bindWriterT"] = bindWriterT;
  exports["monadWriterT"] = monadWriterT;
  exports["monadWriterWriterT"] = monadWriterWriterT;;
 
})(PS["Control.Monad.Writer.Trans"] = PS["Control.Monad.Writer.Trans"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Identity = function (x) {
      return x;
  };
  var runIdentity = function (_0) {
      return _0;
  };
  var functorIdentity = new Prelude.Functor(function (f) {
      return function (_23) {
          return f(_23);
      };
  });
  var applyIdentity = new Prelude.Apply(function () {
      return functorIdentity;
  }, function (_24) {
      return function (_25) {
          return _24(_25);
      };
  });
  var bindIdentity = new Prelude.Bind(function () {
      return applyIdentity;
  }, function (_26) {
      return function (f) {
          return f(_26);
      };
  });
  var applicativeIdentity = new Prelude.Applicative(function () {
      return applyIdentity;
  }, Identity);
  var monadIdentity = new Prelude.Monad(function () {
      return applicativeIdentity;
  }, function () {
      return bindIdentity;
  });
  exports["Identity"] = Identity;
  exports["runIdentity"] = runIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["applyIdentity"] = applyIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
  exports["bindIdentity"] = bindIdentity;
  exports["monadIdentity"] = monadIdentity;;
 
})(PS["Data.Identity"] = PS["Data.Identity"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_Monad_Writer_Trans = PS["Control.Monad.Writer.Trans"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Tuple = PS["Data.Tuple"];     
  var runWriter = function (_0) {
      return Data_Identity.runIdentity(Control_Monad_Writer_Trans.runWriterT(_0));
  };
  var execWriter = function (m) {
      return Data_Tuple.snd(runWriter(m));
  };
  exports["execWriter"] = execWriter;
  exports["runWriter"] = runWriter;;
 
})(PS["Control.Monad.Writer"] = PS["Control.Monad.Writer"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Writer = PS["Control.Monad.Writer"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Data_Array = PS["Data.Array"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_Profunctor_Strong = PS["Data.Profunctor.Strong"];
  var Data_Tuple = PS["Data.Tuple"];
  var CSS_Property = PS["CSS.Property"];
  var CSS_Selector = PS["CSS.Selector"];
  var Data_Monoid = PS["Data.Monoid"];
  var Control_Monad_Writer_Trans = PS["Control.Monad.Writer.Trans"];
  var Data_Identity = PS["Data.Identity"];
  var MediaType = function (x) {
      return x;
  };
  var Feature = (function () {
      function Feature(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Feature.create = function (value0) {
          return function (value1) {
              return new Feature(value0, value1);
          };
      };
      return Feature;
  })();
  var MediaQuery = (function () {
      function MediaQuery(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      MediaQuery.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new MediaQuery(value0, value1, value2);
              };
          };
      };
      return MediaQuery;
  })();
  var Self = (function () {
      function Self(value0) {
          this.value0 = value0;
      };
      Self.create = function (value0) {
          return new Self(value0);
      };
      return Self;
  })();
  var Root = (function () {
      function Root(value0) {
          this.value0 = value0;
      };
      Root.create = function (value0) {
          return new Root(value0);
      };
      return Root;
  })();
  var Pop = (function () {
      function Pop(value0) {
          this.value0 = value0;
      };
      Pop.create = function (value0) {
          return new Pop(value0);
      };
      return Pop;
  })();
  var Child = (function () {
      function Child(value0) {
          this.value0 = value0;
      };
      Child.create = function (value0) {
          return new Child(value0);
      };
      return Child;
  })();
  var Sub = (function () {
      function Sub(value0) {
          this.value0 = value0;
      };
      Sub.create = function (value0) {
          return new Sub(value0);
      };
      return Sub;
  })();
  var Property = (function () {
      function Property(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Property.create = function (value0) {
          return function (value1) {
              return new Property(value0, value1);
          };
      };
      return Property;
  })();
  var Nested = (function () {
      function Nested(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Nested.create = function (value0) {
          return function (value1) {
              return new Nested(value0, value1);
          };
      };
      return Nested;
  })();
  var Query = (function () {
      function Query(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Query.create = function (value0) {
          return function (value1) {
              return new Query(value0, value1);
          };
      };
      return Query;
  })();
  var Face = (function () {
      function Face(value0) {
          this.value0 = value0;
      };
      Face.create = function (value0) {
          return new Face(value0);
      };
      return Face;
  })();
  var Keyframe = (function () {
      function Keyframe(value0) {
          this.value0 = value0;
      };
      Keyframe.create = function (value0) {
          return new Keyframe(value0);
      };
      return Keyframe;
  })();
  var Import = (function () {
      function Import(value0) {
          this.value0 = value0;
      };
      Import.create = function (value0) {
          return new Import(value0);
      };
      return Import;
  })();
  var Keyframes = (function () {
      function Keyframes(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Keyframes.create = function (value0) {
          return function (value1) {
              return new Keyframes(value0, value1);
          };
      };
      return Keyframes;
  })();
  var S = function (x) {
      return x;
  };
  var runS = function (_1) {
      return Control_Monad_Writer.execWriter(_1);
  };
  var rule = function (_14) {
      return S(Control_Monad_Writer_Class.tell(Data_Monoid.monoidArray)(Control_Monad_Writer_Trans.monadWriterT(Data_Monoid.monoidArray)(Data_Identity.monadIdentity))(Control_Monad_Writer_Trans.monadWriterWriterT(Data_Monoid.monoidArray)(Data_Identity.monadIdentity))(Data_Array.singleton(_14)));
  };
  var $qmark = function (sel) {
      return function (rs) {
          return rule(new Nested(new Sub(sel), runS(rs)));
      };
  };
  var query = function (ty) {
      return function (fs) {
          return function (_15) {
              return rule(Query.create(new MediaQuery(Data_Maybe.Nothing.value, ty, fs))(runS(_15)));
          };
      };
  };
  var keyframes = function (n) {
      return function (xs) {
          return rule(new Keyframe(new Keyframes(n, Prelude["<$>"](Data_NonEmpty.functorNonEmpty(Prelude.functorArray))(Data_Profunctor_Strong.second(Data_Profunctor_Strong.strongFn)(runS))(xs))));
      };
  };
  var key = function (__dict_Val_0) {
      return function (k) {
          return function (v) {
              return rule(new Property(CSS_Property.cast(k), CSS_Property.value(__dict_Val_0)(v)));
          };
      };
  };
  var functorStyleM = new Prelude.Functor(function (f) {
      return function (_2) {
          return S(Prelude["<$>"](Control_Monad_Writer_Trans.functorWriterT(Data_Identity.functorIdentity))(f)(_2));
      };
  });
  var fontFace = function (_17) {
      return rule(Face.create(runS(_17)));
  };
  var applyStyleM = new Prelude.Apply(function () {
      return functorStyleM;
  }, function (_3) {
      return function (_4) {
          return S(Prelude["<*>"](Control_Monad_Writer_Trans.applyWriterT(Prelude.semigroupArray)(Data_Identity.applyIdentity))(_3)(_4));
      };
  });
  var bindStyleM = new Prelude.Bind(function () {
      return applyStyleM;
  }, function (_5) {
      return function (f) {
          return S(Prelude[">>="](Control_Monad_Writer_Trans.bindWriterT(Prelude.semigroupArray)(Data_Identity.monadIdentity))(_5)(function (_18) {
              return (function (_0) {
                  return _0;
              })(f(_18));
          }));
      };
  });
  exports["S"] = S;
  exports["Property"] = Property;
  exports["Nested"] = Nested;
  exports["Query"] = Query;
  exports["Face"] = Face;
  exports["Keyframe"] = Keyframe;
  exports["Import"] = Import;
  exports["Keyframes"] = Keyframes;
  exports["Self"] = Self;
  exports["Root"] = Root;
  exports["Pop"] = Pop;
  exports["Child"] = Child;
  exports["Sub"] = Sub;
  exports["Feature"] = Feature;
  exports["MediaQuery"] = MediaQuery;
  exports["MediaType"] = MediaType;
  exports["fontFace"] = fontFace;
  exports["keyframes"] = keyframes;
  exports["query"] = query;
  exports["?"] = $qmark;
  exports["key"] = key;
  exports["rule"] = rule;
  exports["runS"] = runS;
  exports["functorStyleM"] = functorStyleM;
  exports["applyStyleM"] = applyStyleM;
  exports["bindStyleM"] = bindStyleM;;
 
})(PS["CSS.Stylesheet"] = PS["CSS.Stylesheet"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Data_These = PS["Data.These"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_String = PS["Data.String"];
  var CSS_Property = PS["CSS.Property"];
  var CSS_Selector = PS["CSS.Selector"];
  var CSS_String = PS["CSS.String"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];
  var Control_Alternative = PS["Control.Alternative"];     
  var Sheet = function (x) {
      return x;
  };
  var Inline = function (x) {
      return x;
  };
  var sepWith = function (s) {
      return function (a) {
          return function (b) {
              return a + (s + b);
          };
      };
  };
  var semigroupInline = new Prelude.Semigroup(function (_26) {
      return function (_27) {
          return _26 + _27;
      };
  });
  var semigroupFile = new Prelude.Semigroup(function (_28) {
      return function (_29) {
          return _28 + _29;
      };
  });
  var properties = function (xs) {
      var sheetRules = Data_Either.either(function (_8) {
          return Data_Monoid.mempty(Data_Monoid.monoidString);
      })(function (_9) {
          return Data_Foldable.mconcat(Data_Foldable.foldableArray)(Data_Monoid.monoidString)([ _9.value0, ": ", _9.value1, "\n" ]);
      });
      return Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)("; ")(Prelude["<$>"](Prelude.functorArray)(sheetRules)(xs));
  };
  var predicate = function (_24) {
      if (_24 instanceof CSS_Selector.Id) {
          return "#" + _24.value0;
      };
      if (_24 instanceof CSS_Selector.Class) {
          return "." + _24.value0;
      };
      if (_24 instanceof CSS_Selector.Attr) {
          return "[" + (_24.value0 + "]");
      };
      if (_24 instanceof CSS_Selector.AttrVal) {
          return "[" + (_24.value0 + ("='" + (_24.value1 + "']")));
      };
      if (_24 instanceof CSS_Selector.AttrBegins) {
          return "[" + (_24.value0 + ("^='" + (_24.value1 + "']")));
      };
      if (_24 instanceof CSS_Selector.AttrEnds) {
          return "[" + (_24.value0 + ("$='" + (_24.value1 + "']")));
      };
      if (_24 instanceof CSS_Selector.AttrContains) {
          return "[" + (_24.value0 + ("*='" + (_24.value1 + "']")));
      };
      if (_24 instanceof CSS_Selector.AttrSpace) {
          return "[" + (_24.value0 + ("~='" + (_24.value1 + "']")));
      };
      if (_24 instanceof CSS_Selector.AttrHyph) {
          return "[" + (_24.value0 + ("|='" + (_24.value1 + "']")));
      };
      if (_24 instanceof CSS_Selector.Pseudo) {
          return ":" + _24.value0;
      };
      if (_24 instanceof CSS_Selector.PseudoFunc) {
          return ":" + (_24.value0 + ("(" + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(",")(_24.value1) + ")")));
      };
      throw new Error("Failed pattern match at CSS.RenderForCompilation line 156, column 1 - line 157, column 1: " + [ _24.constructor.name ]);
  };
  var selector$prime$prime = function (_18) {
      return function (_19) {
          if (_18.length === 0 && _19 instanceof CSS_Selector.Star) {
              return [ "*" ];
          };
          if (_19 instanceof CSS_Selector.Star) {
              return [ "" ];
          };
          if (_19 instanceof CSS_Selector.Elem) {
              return [ _19.value0 ];
          };
          if (_19 instanceof CSS_Selector.PathChild) {
              return Prelude["<*>"](Prelude.applyArray)(Prelude["<$>"](Prelude.functorArray)(sepWith(" > "))(selector$prime(_19.value0)))(selector$prime(_19.value1));
          };
          if (_19 instanceof CSS_Selector.Deep) {
              return Prelude["<*>"](Prelude.applyArray)(Prelude["<$>"](Prelude.functorArray)(sepWith(" "))(selector$prime(_19.value0)))(selector$prime(_19.value1));
          };
          if (_19 instanceof CSS_Selector.Adjacent) {
              return Prelude["<*>"](Prelude.applyArray)(Prelude["<$>"](Prelude.functorArray)(sepWith(" + "))(selector$prime(_19.value0)))(selector$prime(_19.value1));
          };
          if (_19 instanceof CSS_Selector.Combined) {
              return Prelude["<>"](Prelude.semigroupArray)(selector$prime(_19.value0))(selector$prime(_19.value1));
          };
          throw new Error("Failed pattern match: " + [ _18.constructor.name, _19.constructor.name ]);
      };
  };
  var selector$prime = function (_17) {
      return Prelude["<$>"](Prelude.functorArray)(function (_3) {
          return _3 + Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(predicate)(Data_Array.sort(CSS_Selector.ordPredicate)(_17.value0));
      })(selector$prime$prime(_17.value0)(_17.value1));
  };
  var selector = function (_141) {
      return Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(", ")(selector$prime(_141));
  };
  var nel = function (_25) {
      if (_25.length === 0) {
          return Data_Maybe.Nothing.value;
      };
      return Prelude["<$>"](Data_Maybe.functorMaybe)(function (_10) {
          return Data_NonEmpty[":|"](_10.head)(_10.tail);
      })(Data_Array.uncons(_25));
  };                                               
  var merger = function (_23) {
      if (_23.value0 instanceof CSS_Stylesheet.Child) {
          return Data_Maybe.maybe(_23.value0.value0)(function (xs$prime) {
              return CSS_Selector["|>"](merger(xs$prime))(_23.value0.value0);
          })(nel(_23.value1));
      };
      if (_23.value0 instanceof CSS_Stylesheet.Sub) {
          return Data_Maybe.maybe(_23.value0.value0)(function (xs$prime) {
              return CSS_Selector["**"](merger(xs$prime))(_23.value0.value0);
          })(nel(_23.value1));
      };
      if (_23.value0 instanceof CSS_Stylesheet.Root) {
          return Data_Maybe.maybe(_23.value0.value0)(function (xs$prime) {
              return CSS_Selector["**"](_23.value0.value0)(merger(xs$prime));
          })(nel(_23.value1));
      };
      if (_23.value0 instanceof CSS_Stylesheet.Pop) {
          return Data_Maybe.maybe(CSS_Selector.element("TODO"))(merger)(nel(Data_Array.drop(_23.value0.value0)(Data_Array[":"](_23.value0)(_23.value1))));
      };
      if (_23.value0 instanceof CSS_Stylesheet.Self) {
          return Data_Maybe.maybe(CSS_Selector["with"](CSS_Selector.star)(_23.value0.value0))(function (xs$prime) {
              return CSS_Selector["with"](merger(xs$prime))(_23.value0.value0);
          })(nel(_23.value1));
      };
      throw new Error("Failed pattern match: " + [ _23.value0.constructor.name ]);
  };
  var mediaType = function (_15) {
      return CSS_Property.plain(_15);
  };
  var indent = function (spaces) {
      return function (separator) {
          var separator$prime = separator + Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(Data_Array.replicate(spaces)(" "));
          return Prelude[">>>"](Prelude.semigroupoidFn)(Data_String.split(separator))(Prelude[">>>"](Prelude.semigroupoidFn)(function (xs) {
              return Data_Array.take(Data_Array.length(xs) - 2)(xs);
          })(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(separator$prime)));
      };
  };
  var imp = function (t) {
      return Data_Maybe.Just.create(Data_These.That.create(Sheet(CSS_String.fromString(CSS_String.isStringString)("@import url(" + (t + ");\n")))));
  };
  var getSheet = function (_12) {
      return _12;
  };
  var renderedSheet = function (_1) {
      return Prelude[">>="](Data_Maybe.bindMaybe)(_1)(function (_142) {
          return Prelude.map(Data_Maybe.functorMaybe)(getSheet)(Data_These.theseRight(_142));
      });
  };
  var getInline = function (_11) {
      return _11;
  };
  var renderedInline = function (_0) {
      return Prelude[">>="](Data_Maybe.bindMaybe)(_0)(function (_143) {
          return Prelude.map(Data_Maybe.functorMaybe)(getInline)(Data_These.theseLeft(_143));
      });
  };
  var feature = function (_16) {
      return Data_Maybe.maybe(_16.value0)(function (_4) {
          return "(" + (_16.value0 + (": " + (CSS_Property.plain(_4) + ")")));
      })(_16.value1);
  };
  var mediaQuery = function (_14) {
      return "@media " + (mediaType(_14.value1) + Data_NonEmpty.foldl1(Data_Foldable.foldableArray)(Prelude["<>"](Prelude.semigroupString))(Prelude["<$>"](Data_NonEmpty.functorNonEmpty(Prelude.functorArray))(function (_144) {
          return " and " + feature(_144);
      })(_14.value2)));
  };
  var collect$prime = function (_21) {
      return function (_22) {
          if (_21 instanceof CSS_Property.Plain && _22 instanceof CSS_Property.Plain) {
              return [ new Data_Either.Right(new Data_Tuple.Tuple(_21.value0, _22.value0)) ];
          };
          if (_21 instanceof CSS_Property.Prefixed && _22 instanceof CSS_Property.Plain) {
              return Prelude["<$>"](Prelude.functorArray)(function (_5) {
                  return Data_Either.Right.create(new Data_Tuple.Tuple(_5.value0 + _5.value1, _22.value0));
              })(_21.value0);
          };
          if (_21 instanceof CSS_Property.Plain && _22 instanceof CSS_Property.Prefixed) {
              return Prelude["<$>"](Prelude.functorArray)(function (_6) {
                  return Data_Either.Right.create(new Data_Tuple.Tuple(_21.value0, _6.value0 + _6.value1));
              })(_22.value0);
          };
          if (_21 instanceof CSS_Property.Prefixed && _22 instanceof CSS_Property.Prefixed) {
              return Prelude["<$>"](Prelude.functorArray)(function (_7) {
                  return Data_Maybe.maybe(new Data_Either.Left(_7.value0 + _7.value1))(function (_145) {
                      return Data_Either.Right.create(Data_Tuple.Tuple.create(_7.value0 + _7.value1)(_7.value0 + _145));
                  })(Data_Tuple.lookup(Data_Foldable.foldableArray)(Prelude.eqString)(_7.value0)(_22.value0));
              })(_21.value0);
          };
          throw new Error("Failed pattern match at CSS.RenderForCompilation line 137, column 1 - line 138, column 1: " + [ _21.constructor.name, _22.constructor.name ]);
      };
  };
  var collect = function (_20) {
      return collect$prime(_20.value0)(_20.value1);
  };
  var rule$prime = function (sel) {
      return function (props) {
          var p = Prelude[">>="](Prelude.bindArray)(props)(collect);
          var q = Prelude["<$>"](Data_Maybe.functorMaybe)(function (_146) {
              return Data_These.This.create(Inline(properties(Data_NonEmpty.oneOf(Control_Alternative.alternativeArray)(_146))));
          })(nel(p));
          var o = function (sel$prime) {
              return Data_Maybe.Just.create(Data_These.That.create(Sheet(Data_Foldable.mconcat(Data_Foldable.foldableArray)(Data_Monoid.monoidString)([ selector(merger(sel$prime)), " {\n  ", properties(p), "}\n" ]))));
          };
          return Data_Maybe.maybe(q)(o)(nel(sel));
      };
  };
  var rules = function (sel) {
      return function (rs) {
          var queries = function (_32) {
              if (_32 instanceof CSS_Stylesheet.Query) {
                  return new Data_Maybe.Just(new Data_Tuple.Tuple(_32.value0, _32.value1));
              };
              return Data_Maybe.Nothing.value;
          };
          var queryRules = Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Maybe.monoidMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(Data_Tuple.uncurry(Prelude.flip(query$prime)(sel)))(Data_Array.mapMaybe(queries)(rs));
          var property = function (_30) {
              if (_30 instanceof CSS_Stylesheet.Property) {
                  return new Data_Maybe.Just(new Data_Tuple.Tuple(_30.value0, _30.value1));
              };
              return Data_Maybe.Nothing.value;
          };
          var topRules = rule$prime(sel)(Data_Array.mapMaybe(property)(rs));
          var nestedRules = function (a) {
              return rules(Data_Array[":"](a)(sel));
          };
          var nested = function (_31) {
              if (_31 instanceof CSS_Stylesheet.Nested) {
                  return new Data_Maybe.Just(new Data_Tuple.Tuple(_31.value0, _31.value1));
              };
              return Data_Maybe.Nothing.value;
          };
          var nestedSheets = Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Maybe.monoidMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(function (_2) {
              return Prelude["<>"](Data_Maybe.semigroupMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(_2)(Data_Maybe.Just.create(Data_These.That.create("\n")));
          })(Prelude["<$>"](Prelude.functorArray)(Data_Tuple.uncurry(nestedRules))(Data_Array.mapMaybe(nested)(rs)));
          var kframes = function (_33) {
              if (_33 instanceof CSS_Stylesheet.Keyframe) {
                  return new Data_Maybe.Just(_33.value0);
              };
              return Data_Maybe.Nothing.value;
          };
          var keyframeRules = Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Maybe.monoidMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(kframe)(Data_Array.mapMaybe(kframes)(rs));
          var imports = function (_35) {
              if (_35 instanceof CSS_Stylesheet.Import) {
                  return new Data_Maybe.Just(_35.value0);
              };
              return Data_Maybe.Nothing.value;
          };
          var importRules = Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Maybe.monoidMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(imp)(Data_Array.mapMaybe(imports)(rs));
          var faces = function (_34) {
              if (_34 instanceof CSS_Stylesheet.Face) {
                  return new Data_Maybe.Just(_34.value0);
              };
              return Data_Maybe.Nothing.value;
          };
          var faceRules = Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Maybe.monoidMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(face)(Data_Array.mapMaybe(faces)(rs));
          return Prelude["<>"](Data_Maybe.semigroupMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(topRules)(Prelude["<>"](Data_Maybe.semigroupMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(importRules)(Prelude["<>"](Data_Maybe.semigroupMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(keyframeRules)(Prelude["<>"](Data_Maybe.semigroupMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(faceRules)(Prelude["<>"](Data_Maybe.semigroupMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(nestedSheets)(queryRules)))));
      };
  };
  var query$prime = function (q) {
      return function (sel) {
          return function (rs) {
              var indentedRules = indent(2)("\n")(Data_Maybe.fromMaybe("")(renderedSheet(rules(sel)(rs))));
              return Data_Maybe.Just.create(Data_These.That.create(Sheet(mediaQuery(q) + (" {\n  " + (indentedRules + "\n}")))));
          };
      };
  };
  var kframe = function (_13) {
      return Data_Maybe.Just.create(Data_These.That.create(Sheet("@-webkit-keyframes " + (_13.value0 + (" {\n" + (Data_Foldable.mconcat(Data_NonEmpty.foldableNonEmpty(Data_Foldable.foldableArray))(Data_Monoid.monoidString)(Prelude["<$>"](Data_NonEmpty.functorNonEmpty(Prelude.functorArray))(Data_Tuple.uncurry(frame))(_13.value1)) + "}\n\n"))))));
  };
  var frame = function (p) {
      return function (rs) {
          var x = Data_Maybe.fromMaybe("")(renderedInline(rules([  ])(rs)));
          return "  " + (Prelude.show(Prelude.showNumber)(p) + ("% " + ("{\n    " + (x + "  }\n"))));
      };
  };
  var face = function (rs) {
      return Data_Maybe.Just.create(Data_These.That.create(Sheet("@font-face {\n  " + (Data_Maybe.fromMaybe("")(renderedInline(rules([  ])(rs))) + "}\n\n"))));
  };
  var render = function (_147) {
      return rules([  ])(CSS_Stylesheet.runS(_147));
  };
  var renderStyleSheet = function (_148) {
      return Data_Maybe.fromMaybe("")(renderedSheet(render(_148)));
  };
  exports["Sheet"] = Sheet;
  exports["Inline"] = Inline;
  exports["nel"] = nel;
  exports["predicate"] = predicate;
  exports["merger"] = merger;
  exports["properties"] = properties;
  exports["collect"] = collect;
  exports["sepWith"] = sepWith;
  exports["selector"] = selector;
  exports["imp"] = imp;
  exports["rules"] = rules;
  exports["face"] = face;
  exports["feature"] = feature;
  exports["mediaType"] = mediaType;
  exports["mediaQuery"] = mediaQuery;
  exports["indent"] = indent;
  exports["frame"] = frame;
  exports["kframe"] = kframe;
  exports["render"] = render;
  exports["renderedSheet"] = renderedSheet;
  exports["renderedInline"] = renderedInline;
  exports["getSheet"] = getSheet;
  exports["getInline"] = getInline;
  exports["renderStyleSheet"] = renderStyleSheet;
  exports["semigroupInline"] = semigroupInline;
  exports["semigroupFile"] = semigroupFile;;
 
})(PS["CSS.RenderForCompilation"] = PS["CSS.RenderForCompilation"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["CSS.Compile"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Node_FS = PS["Node.FS"];
  var Node_FS_Sync = PS["Node.FS.Sync"];
  var Node_Encoding = PS["Node.Encoding"];
  var DOM = PS["DOM"];
  var Control_Apply = PS["Control.Apply"];
  var CSS_RenderForCompilation = PS["CSS.RenderForCompilation"];
  var CSS_Render = PS["CSS.Render"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];
  var compile = function (css) {
      var mkCSSFile = function (dirPath) {
          return Node_FS_Sync.writeTextFile(Node_Encoding.UTF8.value)(dirPath + "\\Main.css")(css);
      };
      var mkCSSDir = function (dirPath) {
          return Control_Apply["*>"](Control_Monad_Eff.applyEff)(Node_FS_Sync.mkdir(dirPath))(Prelude.pure(Control_Monad_Eff.applicativeEff)(dirPath));
      };
      return function __do() {
          Control_Monad_Eff_Console.log("Compiling CSS file into .\\css\\Main.css")();
          var _0 = Node_FS_Sync.exists(".\\css")();
          return (function () {
              if (_0) {
                  return mkCSSFile(".\\css");
              };
              if (!_0) {
                  return Prelude[">>="](Control_Monad_Eff.bindEff)(mkCSSDir(".\\css"))(mkCSSFile);
              };
              throw new Error("Failed pattern match at CSS.Compile line 28, column 1 - line 29, column 1: " + [ _0.constructor.name ]);
          })()();
      };
  };
  var renderAndCompile = function (_4) {
      return compile(CSS_RenderForCompilation.renderStyleSheet(_4));
  };
  exports["renderAndCompile"] = renderAndCompile;
  exports["compile"] = compile;;
 
})(PS["CSS.Compile"] = PS["CSS.Compile"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var CSS_Property = PS["CSS.Property"];
  var CSS_String = PS["CSS.String"];
  var Data_Monoid = PS["Data.Monoid"];     
  var Rgba = (function () {
      function Rgba(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Rgba.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Rgba(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Rgba;
  })();
  var Hsla = (function () {
      function Hsla(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Hsla.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Hsla(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Hsla;
  })();
  var Other = (function () {
      function Other(value0) {
          this.value0 = value0;
      };
      Other.create = function (value0) {
          return new Other(value0);
      };
      return Other;
  })();
  var valColor = new CSS_Property.Val(function (_0) {
      if (_0 instanceof Rgba && _0.value3 === 255) {
          return CSS_Property.Value(CSS_String.fromString(CSS_Property.isStringPrefixed)("rgb(" + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(", ")([ Prelude.show(Prelude.showInt)(_0.value0), Prelude.show(Prelude.showInt)(_0.value1), Prelude.show(Prelude.showInt)(_0.value2) ]) + ")")));
      };
      if (_0 instanceof Rgba) {
          return CSS_Property.Value(CSS_String.fromString(CSS_Property.isStringPrefixed)("rgba(" + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(", ")([ Prelude.show(Prelude.showInt)(_0.value0), Prelude.show(Prelude.showInt)(_0.value1), Prelude.show(Prelude.showInt)(_0.value2), Prelude.show(Prelude.showInt)(_0.value3) ]) + ")")));
      };
      if (_0 instanceof Hsla && _0.value3 === 1.0) {
          return CSS_Property.Value(CSS_String.fromString(CSS_Property.isStringPrefixed)("hsl(" + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(", ")([ Prelude.show(Prelude.showNumber)(_0.value0), Prelude.show(Prelude.showNumber)(_0.value1), Prelude.show(Prelude.showNumber)(_0.value2) ]) + ")")));
      };
      if (_0 instanceof Hsla) {
          return CSS_Property.Value(CSS_String.fromString(CSS_Property.isStringPrefixed)("hsla(" + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(", ")([ Prelude.show(Prelude.showNumber)(_0.value0), Prelude.show(Prelude.showNumber)(_0.value1), Prelude.show(Prelude.showNumber)(_0.value2), Prelude.show(Prelude.showNumber)(_0.value3) ]) + ")")));
      };
      if (_0 instanceof Other) {
          return _0.value0;
      };
      throw new Error("Failed pattern match at CSS.Color line 17, column 1 - line 24, column 1: " + [ _0.constructor.name ]);
  });                    
  var rgb = function (r) {
      return function (g) {
          return function (b) {
              return new Rgba(r, g, b, 255);
          };
      };
  };                             
  var white = rgb(255)(255)(255);
  exports["Rgba"] = Rgba;
  exports["Hsla"] = Hsla;
  exports["Other"] = Other;
  exports["white"] = white;
  exports["rgb"] = rgb;
  exports["valColor"] = valColor;;
 
})(PS["CSS.Color"] = PS["CSS.Color"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var CSS_Color = PS["CSS.Color"];
  var CSS_Property = PS["CSS.Property"];
  var CSS_String = PS["CSS.String"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];     
  var BackgroundImage = function (x) {
      return x;
  };
  var valBackroundImage = new CSS_Property.Val(function (_0) {
      return _0;
  });
  var backgroundImage = CSS_Stylesheet.key(valBackroundImage)(CSS_String.fromString(CSS_Property.isStringKey)("background-image"));
  exports["BackgroundImage"] = BackgroundImage;
  exports["backgroundImage"] = backgroundImage;
  exports["valBackroundImage"] = valBackroundImage;;
 
})(PS["CSS.Background"] = PS["CSS.Background"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var CSS_Property = PS["CSS.Property"];
  var CSS_String = PS["CSS.String"];     
  var Size = function (x) {
      return x;
  };
  var Angle = function (x) {
      return x;
  };
  var valSize = new CSS_Property.Val(function (_0) {
      return _0;
  });
  var valAngle = new CSS_Property.Val(function (_1) {
      return _1;
  });
  var sym = function (f) {
      return function (a) {
          return f(a)(a)(a)(a);
      };
  };
  var px = function (i) {
      return Prelude["<>"](CSS_Property.semigroupValue)(CSS_Property.value(CSS_Property.valNumber)(i))(CSS_String.fromString(CSS_Property.isStringValue)("px"));
  };
  var pct = function (i) {
      return Prelude["<>"](CSS_Property.semigroupValue)(CSS_Property.value(CSS_Property.valNumber)(i))(CSS_String.fromString(CSS_Property.isStringValue)("%"));
  };
  var nil = Size(CSS_String.fromString(CSS_Property.isStringValue)("0"));
  var em = function (i) {
      return Prelude["<>"](CSS_Property.semigroupValue)(CSS_Property.value(CSS_Property.valNumber)(i))(CSS_String.fromString(CSS_Property.isStringValue)("em"));
  };
  var deg = function (i) {
      return Angle(Prelude["<>"](CSS_Property.semigroupValue)(CSS_Property.value(CSS_Property.valNumber)(i))(CSS_String.fromString(CSS_Property.isStringValue)("deg")));
  };
  exports["Angle"] = Angle;
  exports["Size"] = Size;
  exports["deg"] = deg;
  exports["sym"] = sym;
  exports["pct"] = pct;
  exports["em"] = em;
  exports["px"] = px;
  exports["nil"] = nil;
  exports["valSize"] = valSize;
  exports["valAngle"] = valAngle;;
 
})(PS["CSS.Size"] = PS["CSS.Size"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var CSS_Background = PS["CSS.Background"];
  var CSS_Color = PS["CSS.Color"];
  var CSS_Property = PS["CSS.Property"];
  var CSS_Size = PS["CSS.Size"];
  var CSS_String = PS["CSS.String"];     
  var ColorPoint = (function () {
      function ColorPoint(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ColorPoint.create = function (value0) {
          return function (value1) {
              return new ColorPoint(value0, value1);
          };
      };
      return ColorPoint;
  })();
  var linearGradient = function (a) {
      return function (b) {
          return function (cs) {
              return function (e) {
                  var colorPoint = function (_0) {
                      return Prelude["<>"](CSS_Property.semigroupValue)(CSS_Property.value(CSS_Color.valColor)(_0.value0))(Prelude["<>"](CSS_Property.semigroupValue)(CSS_String.fromString(CSS_Property.isStringValue)(" "))(CSS_Property.value(CSS_Size.valSize)(_0.value1)));
                  };
                  var points = Data_Foldable.intercalate(Data_Foldable.foldableArray)(CSS_Property.monoidValue)(CSS_String.fromString(CSS_Property.isStringValue)(", "))(Prelude["<>"](Prelude.semigroupArray)([ colorPoint(b) ])(Prelude["<>"](Prelude.semigroupArray)(Prelude["<$>"](Prelude.functorArray)(colorPoint)(cs))([ colorPoint(e) ])));
                  return CSS_Background.BackgroundImage(Prelude["<>"](CSS_Property.semigroupValue)(CSS_String.fromString(CSS_Property.isStringValue)("linear-gradient("))(Prelude["<>"](CSS_Property.semigroupValue)(CSS_Property.value(CSS_Size.valAngle)(a))(Prelude["<>"](CSS_Property.semigroupValue)(CSS_String.fromString(CSS_Property.isStringValue)(", "))(Prelude["<>"](CSS_Property.semigroupValue)(points)(CSS_String.fromString(CSS_Property.isStringValue)(")"))))));
              };
          };
      };
  };
  exports["ColorPoint"] = ColorPoint;
  exports["linearGradient"] = linearGradient;;
 
})(PS["CSS.Gradient"] = PS["CSS.Gradient"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var CSS_Property = PS["CSS.Property"];
  var CSS_Size = PS["CSS.Size"];
  var CSS_String = PS["CSS.String"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];     
  var Transformation = function (x) {
      return x;
  };
  var valTransformation = new CSS_Property.Val(function (_0) {
      return _0;
  });
  var translate = function (x) {
      return function (y) {
          return Transformation(Prelude["<>"](CSS_Property.semigroupValue)(CSS_String.fromString(CSS_Property.isStringValue)("translate("))(Prelude["<>"](CSS_Property.semigroupValue)(CSS_Property.value(CSS_Property.valList(CSS_Size.valSize))([ x, y ]))(CSS_String.fromString(CSS_Property.isStringValue)(")"))));
      };
  };
  var transforms = function (_2) {
      return CSS_Stylesheet.key(CSS_Property.valValue)(CSS_String.fromString(CSS_Property.isStringKey)("transform"))(CSS_Property.noCommas(valTransformation)(_2));
  };                                                                                                                  
  var rotate = function (a) {
      return Transformation(Prelude["<>"](CSS_Property.semigroupValue)(CSS_String.fromString(CSS_Property.isStringValue)("rotate("))(Prelude["<>"](CSS_Property.semigroupValue)(CSS_Property.value(CSS_Size.valAngle)(a))(CSS_String.fromString(CSS_Property.isStringValue)(")"))));
  };
  exports["Transformation"] = Transformation;
  exports["rotate"] = rotate;
  exports["translate"] = translate;
  exports["transforms"] = transforms;
  exports["valTransformation"] = valTransformation;;
 
})(PS["CSS.Transform"] = PS["CSS.Transform"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var CSS_Property = PS["CSS.Property"];
  var CSS_String = PS["CSS.String"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];     
  var WOFF = (function () {
      function WOFF() {

      };
      WOFF.value = new WOFF();
      return WOFF;
  })();
  var WOFF2 = (function () {
      function WOFF2() {

      };
      WOFF2.value = new WOFF2();
      return WOFF2;
  })();
  var TrueType = (function () {
      function TrueType() {

      };
      TrueType.value = new TrueType();
      return TrueType;
  })();
  var OpenType = (function () {
      function OpenType() {

      };
      OpenType.value = new OpenType();
      return OpenType;
  })();
  var EmbeddedOpenType = (function () {
      function EmbeddedOpenType() {

      };
      EmbeddedOpenType.value = new EmbeddedOpenType();
      return EmbeddedOpenType;
  })();
  var SVG = (function () {
      function SVG() {

      };
      SVG.value = new SVG();
      return SVG;
  })();
  var FontFaceSrcUrl = (function () {
      function FontFaceSrcUrl(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      FontFaceSrcUrl.create = function (value0) {
          return function (value1) {
              return new FontFaceSrcUrl(value0, value1);
          };
      };
      return FontFaceSrcUrl;
  })();
  var FontFaceSrcLocal = (function () {
      function FontFaceSrcLocal(value0) {
          this.value0 = value0;
      };
      FontFaceSrcLocal.create = function (value0) {
          return new FontFaceSrcLocal(value0);
      };
      return FontFaceSrcLocal;
  })();
  var formatName = function (_0) {
      if (_0 instanceof WOFF) {
          return "woff";
      };
      if (_0 instanceof WOFF2) {
          return "woff2";
      };
      if (_0 instanceof TrueType) {
          return "truetype";
      };
      if (_0 instanceof OpenType) {
          return "opentype";
      };
      if (_0 instanceof EmbeddedOpenType) {
          return "embedded-opentype";
      };
      if (_0 instanceof SVG) {
          return "svg";
      };
      throw new Error("Failed pattern match at CSS.FontFace line 22, column 1 - line 23, column 1: " + [ _0.constructor.name ]);
  };
  var valFontFaceSrc = new CSS_Property.Val(function (_1) {
      if (_1 instanceof FontFaceSrcUrl) {
          return CSS_String.fromString(CSS_Property.isStringValue)("url(" + (CSS_Property.quote(_1.value0) + (")" + Data_Maybe.maybe("")(function (f$prime) {
              return " format(" + (formatName(f$prime) + ")");
          })(_1.value1))));
      };
      if (_1 instanceof FontFaceSrcLocal) {
          return CSS_String.fromString(CSS_Property.isStringValue)("local(" + (CSS_Property.quote(_1.value0) + ")"));
      };
      throw new Error("Failed pattern match at CSS.FontFace line 33, column 1 - line 37, column 1: " + [ _1.constructor.name ]);
  });
  var fontFaceSrc = CSS_Stylesheet.key(CSS_Property.valNonEmpty(valFontFaceSrc))(CSS_String.fromString(CSS_Property.isStringKey)("src"));
  var fontFaceFamily = function (_7) {
      return CSS_Stylesheet.key(CSS_Property.valLiteral)(CSS_String.fromString(CSS_Property.isStringKey)("font-family"))(CSS_Property.Literal(_7));
  };
  exports["FontFaceSrcUrl"] = FontFaceSrcUrl;
  exports["FontFaceSrcLocal"] = FontFaceSrcLocal;
  exports["WOFF"] = WOFF;
  exports["WOFF2"] = WOFF2;
  exports["TrueType"] = TrueType;
  exports["OpenType"] = OpenType;
  exports["EmbeddedOpenType"] = EmbeddedOpenType;
  exports["SVG"] = SVG;
  exports["fontFaceSrc"] = fontFaceSrc;
  exports["formatName"] = formatName;
  exports["fontFaceFamily"] = fontFaceFamily;
  exports["valFontFaceSrc"] = valFontFaceSrc;;
 
})(PS["CSS.FontFace"] = PS["CSS.FontFace"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var CSS_Color = PS["CSS.Color"];
  var CSS_Property = PS["CSS.Property"];
  var CSS_Size = PS["CSS.Size"];
  var CSS_String = PS["CSS.String"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];
  var Control_Alternative = PS["Control.Alternative"];     
  var GenericFontFamily = function (x) {
      return x;
  };
  var FontWeight = function (x) {
      return x;
  };
  var weight = function (i) {
      return FontWeight(CSS_Property.value(CSS_Property.valNumber)(i));
  };
  var valGenericFontFamily = new CSS_Property.Val(function (_0) {
      return _0;
  });
  var valFontWeight = new CSS_Property.Val(function (_1) {
      return _1;
  });
  var sansSerif = GenericFontFamily(CSS_String.fromString(CSS_Property.isStringValue)("sans-serif"));
  var fontWeight = CSS_Stylesheet.key(valFontWeight)(CSS_String.fromString(CSS_Property.isStringKey)("font-weight"));
  var fontSize = CSS_Stylesheet.key(CSS_Size.valSize)(CSS_String.fromString(CSS_Property.isStringKey)("font-size"));
  var fontFamily = function (a) {
      return function (b) {
          return CSS_Stylesheet.key(CSS_Property.valValue)(CSS_String.fromString(CSS_Property.isStringKey)("font-family"))(CSS_Property.value(CSS_Property.valList(CSS_Property.valValue))(Prelude["<>"](Prelude.semigroupArray)(Prelude["<$>"](Prelude.functorArray)(function (_4) {
              return CSS_Property.value(CSS_Property.valString)(CSS_Property.quote(_4));
          })(a))(Data_NonEmpty.oneOf(Control_Alternative.alternativeArray)(Prelude["<$>"](Data_NonEmpty.functorNonEmpty(Prelude.functorArray))(CSS_Property.value(valGenericFontFamily))(b)))));
      };
  };
  var color = CSS_Stylesheet.key(CSS_Color.valColor)(CSS_String.fromString(CSS_Property.isStringKey)("color"));
  exports["FontWeight"] = FontWeight;
  exports["GenericFontFamily"] = GenericFontFamily;
  exports["fontWeight"] = fontWeight;
  exports["weight"] = weight;
  exports["fontSize"] = fontSize;
  exports["fontFamily"] = fontFamily;
  exports["sansSerif"] = sansSerif;
  exports["color"] = color;
  exports["valGenericFontFamily"] = valGenericFontFamily;
  exports["valFontWeight"] = valFontWeight;;
 
})(PS["CSS.Font"] = PS["CSS.Font"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var CSS_Selector = PS["CSS.Selector"];
  var CSS_String = PS["CSS.String"];     
  var html = CSS_String.fromString(CSS_Selector.isStringSelector)("html");
  var h1 = CSS_String.fromString(CSS_Selector.isStringSelector)("h1");
  var body = CSS_String.fromString(CSS_Selector.isStringSelector)("body");
  var a = CSS_String.fromString(CSS_Selector.isStringSelector)("a");
  exports["html"] = html;
  exports["h1"] = h1;
  exports["a"] = a;
  exports["body"] = body;;
 
})(PS["CSS.Elements"] = PS["CSS.Elements"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Tuple = PS["Data.Tuple"];
  var tuple7 = function (a) {
      return function (b) {
          return function (c) {
              return function (d) {
                  return function (e) {
                      return function (f) {
                          return function (g) {
                              return new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(a, b), c), d), e), f), g);
                          };
                      };
                  };
              };
          };
      };
  };
  var tuple4 = function (a) {
      return function (b) {
          return function (c) {
              return function (d) {
                  return new Data_Tuple.Tuple(new Data_Tuple.Tuple(new Data_Tuple.Tuple(a, b), c), d);
              };
          };
      };
  };
  var tuple3 = function (a) {
      return function (b) {
          return function (c) {
              return new Data_Tuple.Tuple(new Data_Tuple.Tuple(a, b), c);
          };
      };
  };
  var tuple2 = Data_Tuple.Tuple.create;
  exports["tuple7"] = tuple7;
  exports["tuple4"] = tuple4;
  exports["tuple3"] = tuple3;
  exports["tuple2"] = tuple2;;
 
})(PS["Data.Tuple.Nested"] = PS["Data.Tuple.Nested"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var CSS_Size = PS["CSS.Size"];
  var CSS_String = PS["CSS.String"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];
  var CSS_Property = PS["CSS.Property"];                                                                     
  var top = CSS_Stylesheet.key(CSS_Size.valSize)(CSS_String.fromString(CSS_Property.isStringKey)("top"));                     
  var padding = function (a) {
      return function (b) {
          return function (c) {
              return function (d) {
                  return CSS_Stylesheet.key(CSS_Property.valTuple(CSS_Property.valTuple(CSS_Property.valTuple(CSS_Size.valSize)(CSS_Size.valSize))(CSS_Size.valSize))(CSS_Size.valSize))(CSS_String.fromString(CSS_Property.isStringKey)("padding"))(Data_Tuple_Nested.tuple4(a)(b)(c)(d));
              };
          };
      };
  };                                                                                                                        
  var margin = function (a) {
      return function (b) {
          return function (c) {
              return function (d) {
                  return CSS_Stylesheet.key(CSS_Property.valTuple(CSS_Property.valTuple(CSS_Property.valTuple(CSS_Size.valSize)(CSS_Size.valSize))(CSS_Size.valSize))(CSS_Size.valSize))(CSS_String.fromString(CSS_Property.isStringKey)("margin"))(Data_Tuple_Nested.tuple4(a)(b)(c)(d));
              };
          };
      };
  };
  var left = CSS_Stylesheet.key(CSS_Size.valSize)(CSS_String.fromString(CSS_Property.isStringKey)("left"));
  var height = CSS_Stylesheet.key(CSS_Size.valSize)(CSS_String.fromString(CSS_Property.isStringKey)("height"));
  exports["margin"] = margin;
  exports["padding"] = padding;
  exports["left"] = left;
  exports["top"] = top;
  exports["height"] = height;;
 
})(PS["CSS.Geometry"] = PS["CSS.Geometry"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var CSS_Property = PS["CSS.Property"];
  var CSS_String = PS["CSS.String"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];     
  var Position = function (x) {
      return x;
  };
  var Display = function (x) {
      return x;
  };
  var valPosition = new CSS_Property.Val(function (_0) {
      return _0;
  });
  var valDisplay = new CSS_Property.Val(function (_1) {
      return _1;
  });                                                                                    
  var position = CSS_Stylesheet.key(valPosition)(CSS_String.fromString(CSS_Property.isStringKey)("position"));
  var display = CSS_Stylesheet.key(valDisplay)(CSS_String.fromString(CSS_Property.isStringKey)("display"));
  var block = Display(CSS_String.fromString(CSS_Property.isStringValue)("block"));
  var absolute = Position(CSS_String.fromString(CSS_Property.isStringValue)("absolute"));
  exports["Display"] = Display;
  exports["Position"] = Position;
  exports["display"] = display;
  exports["block"] = block;
  exports["absolute"] = absolute;
  exports["position"] = position;
  exports["valPosition"] = valPosition;
  exports["valDisplay"] = valDisplay;;
 
})(PS["CSS.Display"] = PS["CSS.Display"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var CSS_Property = PS["CSS.Property"];
  var CSS_String = PS["CSS.String"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];     
  var TextDecoration = function (x) {
      return x;
  };
  var valTextDecoration = new CSS_Property.Val(function (_0) {
      return _0;
  });                                                                                            
  var textDecoration = CSS_Stylesheet.key(valTextDecoration)(CSS_String.fromString(CSS_Property.isStringKey)("text-decoration"));
  var noneTextDecoration = TextDecoration(CSS_String.fromString(CSS_Property.isStringValue)("none"));
  exports["TextDecoration"] = TextDecoration;
  exports["textDecoration"] = textDecoration;
  exports["noneTextDecoration"] = noneTextDecoration;
  exports["valTextDecoration"] = valTextDecoration;;
 
})(PS["CSS.Text"] = PS["CSS.Text"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var CSS_Color = PS["CSS.Color"];
  var CSS_Property = PS["CSS.Property"];
  var CSS_Size = PS["CSS.Size"];
  var CSS_String = PS["CSS.String"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];     
  var Stroke = function (x) {
      return x;
  };                                                                           
  var valStroke = new CSS_Property.Val(function (_0) {
      return _0;
  });
  var solid = Stroke(CSS_String.fromString(CSS_Property.isStringValue)("solid"));  
  var borderRadius = function (a) {
      return function (b) {
          return function (c) {
              return function (d) {
                  return CSS_Stylesheet.key(CSS_Property.valTuple(CSS_Property.valTuple(CSS_Property.valTuple(CSS_Size.valSize)(CSS_Size.valSize))(CSS_Size.valSize))(CSS_Size.valSize))(CSS_String.fromString(CSS_Property.isStringKey)("border-radius"))(Data_Tuple_Nested.tuple4(a)(b)(c)(d));
              };
          };
      };
  };                                                                                                                        
  var border = function (a) {
      return function (b) {
          return function (c) {
              return CSS_Stylesheet.key(CSS_Property.valTuple(CSS_Property.valTuple(valStroke)(CSS_Size.valSize))(CSS_Color.valColor))(CSS_String.fromString(CSS_Property.isStringKey)("border"))(Data_Tuple_Nested.tuple3(a)(b)(c));
          };
      };
  };
  exports["Stroke"] = Stroke;
  exports["borderRadius"] = borderRadius;
  exports["border"] = border;
  exports["solid"] = solid;
  exports["valStroke"] = valStroke;;
 
})(PS["CSS.Border"] = PS["CSS.Border"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var CSS_Selector = PS["CSS.Selector"];
  var CSS_String = PS["CSS.String"];     
  var hover = CSS_String.fromString(CSS_Selector.isStringRefinement)(":hover");
  exports["hover"] = hover;;
 
})(PS["CSS.Pseudo"] = PS["CSS.Pseudo"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var CSS_Property = PS["CSS.Property"];
  var CSS_String = PS["CSS.String"];     
  var Time = function (x) {
      return x;
  };
  var valTime = new CSS_Property.Val(function (_0) {
      return _0;
  });
  var sec = function (i) {
      return Time(Prelude["<>"](CSS_Property.semigroupValue)(CSS_Property.value(CSS_Property.valNumber)(i))(CSS_String.fromString(CSS_Property.isStringValue)("s")));
  };
  exports["Time"] = Time;
  exports["sec"] = sec;
  exports["valTime"] = valTime;;
 
})(PS["CSS.Time"] = PS["CSS.Time"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var CSS_String = PS["CSS.String"];
  var CSS_Property = PS["CSS.Property"];     
  var TimingFunction = function (x) {
      return x;
  };
  var valTimingFunction = new CSS_Property.Val(function (_0) {
      return _0;
  });
  var linear = TimingFunction(CSS_String.fromString(CSS_Property.isStringValue)("linear"));
  exports["TimingFunction"] = TimingFunction;
  exports["linear"] = linear;
  exports["valTimingFunction"] = valTimingFunction;;
 
})(PS["CSS.Transition"] = PS["CSS.Transition"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var CSS_Property = PS["CSS.Property"];
  var CSS_String = PS["CSS.String"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];
  var CSS_Time = PS["CSS.Time"];
  var CSS_Transition = PS["CSS.Transition"];     
  var IterationCount = function (x) {
      return x;
  };
  var FillMode = function (x) {
      return x;
  };
  var AnimationName = function (x) {
      return x;
  };
  var AnimationDirection = function (x) {
      return x;
  };
  var valIterationCount = new CSS_Property.Val(function (_1) {
      return _1;
  });
  var valFillMode = new CSS_Property.Val(function (_2) {
      return _2;
  });
  var valAnimationName = new CSS_Property.Val(function (_3) {
      return _3;
  });
  var valAnimationDirection = new CSS_Property.Val(function (_0) {
      return _0;
  });                                                                                            
  var normalAnimationDirection = AnimationDirection(CSS_String.fromString(CSS_Property.isStringValue)("normal"));
  var isStringAnimationName = new CSS_String.IsString(function (_9) {
      return AnimationName(CSS_String.fromString(CSS_Property.isStringValue)(_9));
  });
  var infinite = IterationCount(CSS_String.fromString(CSS_Property.isStringValue)("infinite"));
  var forwards = FillMode(CSS_String.fromString(CSS_Property.isStringValue)("forwards"));  
  var animation = function (p) {
      return function (de) {
          return function (f) {
              return function (du) {
                  return function (i) {
                      return function (di) {
                          return function (fm) {
                              return CSS_Stylesheet.key(CSS_Property.valTuple(CSS_Property.valTuple(CSS_Property.valTuple(CSS_Property.valTuple(CSS_Property.valTuple(CSS_Property.valTuple(valAnimationName)(CSS_Time.valTime))(CSS_Transition.valTimingFunction))(CSS_Time.valTime))(valIterationCount))(valAnimationDirection))(valFillMode))(CSS_String.fromString(CSS_Property.isStringKey)("-webkit-animation"))(Data_Tuple_Nested.tuple7(p)(de)(f)(du)(i)(di)(fm));
                          };
                      };
                  };
              };
          };
      };
  };
  exports["AnimationName"] = AnimationName;
  exports["FillMode"] = FillMode;
  exports["IterationCount"] = IterationCount;
  exports["AnimationDirection"] = AnimationDirection;
  exports["animation"] = animation;
  exports["forwards"] = forwards;
  exports["infinite"] = infinite;
  exports["normalAnimationDirection"] = normalAnimationDirection;
  exports["valAnimationDirection"] = valAnimationDirection;
  exports["valIterationCount"] = valIterationCount;
  exports["valFillMode"] = valFillMode;
  exports["valAnimationName"] = valAnimationName;
  exports["isStringAnimationName"] = isStringAnimationName;;
 
})(PS["CSS.Animation"] = PS["CSS.Animation"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var CSS_Property = PS["CSS.Property"];
  var CSS_Size = PS["CSS.Size"];
  var CSS_String = PS["CSS.String"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];     
  var screen = CSS_Stylesheet.MediaType(CSS_String.fromString(CSS_Property.isStringValue)("screen"));
  var maxWidth = function (_0) {
      return CSS_Stylesheet.Feature.create("max-width")(Data_Maybe.Just.create(CSS_Property.value(CSS_Size.valSize)(_0)));
  };
  exports["maxWidth"] = maxWidth;
  exports["screen"] = screen;;
 
})(PS["CSS.Media"] = PS["CSS.Media"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var CSS_Compile = PS["CSS.Compile"];
  var CSS_Color = PS["CSS.Color"];
  var CSS_Background = PS["CSS.Background"];
  var CSS_Gradient = PS["CSS.Gradient"];
  var CSS_Size = PS["CSS.Size"];
  var CSS_Transform = PS["CSS.Transform"];
  var CSS_Stylesheet = PS["CSS.Stylesheet"];
  var CSS_FontFace = PS["CSS.FontFace"];
  var CSS_String = PS["CSS.String"];
  var CSS_Font = PS["CSS.Font"];
  var CSS_Elements = PS["CSS.Elements"];
  var CSS_Geometry = PS["CSS.Geometry"];
  var CSS_Selector = PS["CSS.Selector"];
  var CSS_Display = PS["CSS.Display"];
  var CSS_Text = PS["CSS.Text"];
  var CSS_Border = PS["CSS.Border"];
  var CSS_Pseudo = PS["CSS.Pseudo"];
  var CSS_Animation = PS["CSS.Animation"];
  var CSS_Time = PS["CSS.Time"];
  var CSS_Transition = PS["CSS.Transition"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var CSS_Media = PS["CSS.Media"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple_Nested = PS["Data.Tuple.Nested"];
  var DOM = PS["DOM"];
  var Data_NonEmpty = PS["Data.NonEmpty"];
  var Node_FS = PS["Node.FS"];
  var CSS_CSSCompiled = PS["CSS.CSSCompiled"];
  var Control_Plus = PS["Control.Plus"];     
  var shake = function (f) {
      return CSS_Transform.transforms([ CSS_Transform.translate(CSS_Size.px(f(3.0)))(CSS_Size.nil), CSS_Transform.rotate(CSS_Size.deg(f(2.0))) ]);
  };
  var blue2 = CSS_Color.rgb(238)(238)(255);
  var blue1 = CSS_Color.rgb(51)(136)(204);
  var backgroundGradient = function (a) {
      return CSS_Background.backgroundImage(CSS_Gradient.linearGradient(a)(new CSS_Gradient.ColorPoint(CSS_Color.white, CSS_Size.pct(0.0)))([  ])(new CSS_Gradient.ColorPoint(blue2, CSS_Size.pct(100.0))));
  };
  var style = Prelude.bind(CSS_Stylesheet.bindStyleM)(CSS_Stylesheet.fontFace(Prelude.bind(CSS_Stylesheet.bindStyleM)(CSS_FontFace.fontFaceFamily(CSS_String.fromString(CSS_String.isStringString)("Lato")))(function () {
      return Prelude.bind(CSS_Stylesheet.bindStyleM)(CSS_Font.fontWeight(CSS_Font.weight(300.0)))(function () {
          return CSS_FontFace.fontFaceSrc(Data_NonEmpty[":|"](new CSS_FontFace.FontFaceSrcLocal("Lato Light"))([ new CSS_FontFace.FontFaceSrcLocal("Lato-Light"), new CSS_FontFace.FontFaceSrcUrl("http://fonts.gstatic.com/s/lato/v11/EsvMC5un3kjyUhB9ZEPPwg.woff2", new Data_Maybe.Just(CSS_FontFace.WOFF2.value)) ]));
      });
  })))(function () {
      return Prelude.bind(CSS_Stylesheet.bindStyleM)(CSS_Stylesheet.keyframes("buzz-button")(Data_NonEmpty[":|"](Data_Tuple_Nested.tuple2(50.0)(shake(Prelude.id(Prelude.categoryFn))))([ Data_Tuple_Nested.tuple2(100.0)(shake(Prelude.negate(Prelude.ringNumber))) ])))(function () {
          return Prelude.bind(CSS_Stylesheet.bindStyleM)(CSS_Stylesheet.query(CSS_Media.screen)(Data_NonEmpty.singleton(Control_Plus.plusArray)(CSS_Media.maxWidth(CSS_Size.px(768.0))))(CSS_Stylesheet["?"](CSS_Elements.h1)(CSS_Font.fontSize(CSS_Size.em(2.0)))))(function () {
              return Prelude.bind(CSS_Stylesheet.bindStyleM)(CSS_Stylesheet["?"](CSS_Elements.html)(CSS_Geometry.height(CSS_Size.pct(100.0))))(function () {
                  return Prelude.bind(CSS_Stylesheet.bindStyleM)(CSS_Stylesheet["?"](CSS_Elements.body)(Prelude.bind(CSS_Stylesheet.bindStyleM)(CSS_Font.fontFamily([ "Lato" ])(Data_NonEmpty.singleton(Control_Plus.plusArray)(CSS_Font.sansSerif)))(function () {
                      return Prelude.bind(CSS_Stylesheet.bindStyleM)(CSS_Size.sym(CSS_Geometry.padding)(CSS_Size.nil))(function () {
                          return Prelude.bind(CSS_Stylesheet.bindStyleM)(CSS_Size.sym(CSS_Geometry.margin)(CSS_Size.nil))(function () {
                              return backgroundGradient(CSS_Size.deg(0.0));
                          });
                      });
                  })))(function () {
                      return Prelude.bind(CSS_Stylesheet.bindStyleM)(CSS_Stylesheet["?"](CSS_Selector["**"](CSS_Elements.h1)(CSS_Elements.a))(Prelude.bind(CSS_Stylesheet.bindStyleM)(CSS_Display.display(CSS_Display.block))(function () {
                          return Prelude.bind(CSS_Stylesheet.bindStyleM)(CSS_Font.color(blue1))(function () {
                              return Prelude.bind(CSS_Stylesheet.bindStyleM)(CSS_Text.textDecoration(CSS_Text.noneTextDecoration))(function () {
                                  return Prelude.bind(CSS_Stylesheet.bindStyleM)(CSS_Font.fontWeight(CSS_Font.weight(100.0)))(function () {
                                      return CSS_Size.sym(CSS_Geometry.padding)(CSS_Size.em(0.5));
                                  });
                              });
                          });
                      })))(function () {
                          return Prelude.bind(CSS_Stylesheet.bindStyleM)(CSS_Stylesheet["?"](CSS_Elements.h1)(Prelude.bind(CSS_Stylesheet.bindStyleM)(CSS_Font.fontSize(CSS_Size.em(3.0)))(function () {
                              return Prelude.bind(CSS_Stylesheet.bindStyleM)(CSS_Display.position(CSS_Display.absolute))(function () {
                                  return Prelude.bind(CSS_Stylesheet.bindStyleM)(CSS_Geometry.left(CSS_Size.pct(50.0)))(function () {
                                      return Prelude.bind(CSS_Stylesheet.bindStyleM)(CSS_Geometry.top(CSS_Size.pct(50.0)))(function () {
                                          return Prelude.bind(CSS_Stylesheet.bindStyleM)(backgroundGradient(CSS_Size.deg(180.0)))(function () {
                                              return Prelude.bind(CSS_Stylesheet.bindStyleM)(CSS_Border.border(CSS_Border.solid)(CSS_Size.px(1.0))(blue1))(function () {
                                                  return CSS_Size.sym(CSS_Border.borderRadius)(CSS_Size.em(0.25));
                                              });
                                          });
                                      });
                                  });
                              });
                          })))(function () {
                              return CSS_Stylesheet["?"](CSS_Selector["##"](CSS_Elements.h1)(CSS_Pseudo.hover))(CSS_Animation.animation(CSS_String.fromString(CSS_Animation.isStringAnimationName)("buzz-button"))(CSS_Time.sec(0.15))(CSS_Transition.linear)(CSS_Time.sec(0.0))(CSS_Animation.infinite)(CSS_Animation.normalAnimationDirection)(CSS_Animation.forwards));
                          });
                      });
                  });
              });
          });
      });
  });
  var main = CSS_Compile.renderAndCompile(style);
  exports["style"] = style;
  exports["shake"] = shake;
  exports["backgroundGradient"] = backgroundGradient;
  exports["blue2"] = blue2;
  exports["blue1"] = blue1;
  exports["main"] = main;;
 
})(PS["CSS"] = PS["CSS"] || {});

PS["CSS"].main();
